<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python运维工具之SFTP上传服务器</title>
      <link href="/2024/07/22/python-yun-wei-gong-ju-zhi-sftp-shang-chuan-fu-wu-qi/"/>
      <url>/2024/07/22/python-yun-wei-gong-ju-zhi-sftp-shang-chuan-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、需求说明"><a href="#一、需求说明" class="headerlink" title="一、需求说明"></a>一、需求说明</h2><p>1.设计桌面程序，封装好链接，通过SFTP协议上传本地文件至服务器</p><p>2.检测本地文件的格式</p><p>3.获取服务器文件列表，下载至本地</p><h2 id="二、总体思路整理"><a href="#二、总体思路整理" class="headerlink" title="二、总体思路整理"></a>二、总体思路整理</h2><p>1.使用pyqt库设计，使用QT designer （.ui文件)设计程序元素</p><p>2.py引入ui文件，获取各个控件，绑定事件（获取文件地址、检测文件格式、上传服务器、获取服务器文件列表、下载文件），所有绑定事件内需要写入日志</p><h3 id="2-1程序ui"><a href="#2-1程序ui" class="headerlink" title="2.1程序ui"></a>2.1程序ui</h3><p><img src="/2024/07/22/python-yun-wei-gong-ju-zhi-sftp-shang-chuan-fu-wu-qi/ui%E8%AE%BE%E8%AE%A1.jpg" alt="ui设计"></p><p>先小后大：先设计相关控件位置，再添加父容器，确定之间的布局关系，使用layoutStretch确定大小。</p><p>见名知意：控件设置名字</p><h3 id="2-2-py程序"><a href="#2-2-py程序" class="headerlink" title="2.2 py程序"></a>2.2 py程序</h3><h4 id="2-2-1-引入模块"><a href="#2-2-1-引入模块" class="headerlink" title="2.2.1 引入模块"></a>2.2.1 引入模块</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token punctuation">.</span>path <span class="token comment" spellcheck="true"># 获取临时文件夹的路径</span><span class="token keyword">import</span> sys    <span class="token comment" spellcheck="true">#pyqt5的QApplication 需要参数</span><span class="token keyword">import</span> chardet <span class="token comment" spellcheck="true">#检测txt编码（utf-8,GB2312,...)</span><span class="token keyword">import</span> paramiko <span class="token comment" spellcheck="true">#SFTP协议的封装上传</span><span class="token keyword">from</span> PyQt5 <span class="token keyword">import</span> uic<span class="token punctuation">,</span> QtWidgets <span class="token comment" spellcheck="true">#解析QT Desinger 的ui文件</span><span class="token keyword">from</span> PyQt5<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QStringListModel <span class="token comment" spellcheck="true"># QStringListModel 用于处理字符串列表的数据模型，它可以作为 QListView 的数据模型，在界面上显示和编辑字符串列表。</span><span class="token keyword">from</span> PyQt5<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QMainWindow<span class="token punctuation">,</span> QApplication<span class="token punctuation">,</span> QFileDialog<span class="token punctuation">,</span> QPushButton<span class="token punctuation">,</span> QLineEdit<span class="token punctuation">,</span> QStatusBar<span class="token punctuation">,</span> QLabel<span class="token punctuation">,</span> QScrollArea<span class="token punctuation">,</span> QWidget<span class="token punctuation">,</span> QPlainTextEdit<span class="token punctuation">,</span> QRadioButton<span class="token punctuation">,</span> QListView<span class="token punctuation">,</span> QMessageBox <span class="token comment" spellcheck="true">#相关控件</span><span class="token keyword">import</span> socket <span class="token comment" spellcheck="true"># 获取本机ip</span></code></pre><h4 id="2-2-2-全局变量"><a href="#2-2-2-全局变量" class="headerlink" title="2.2.2 全局变量"></a>2.2.2 全局变量</h4><pre class=" language-python"><code class="language-python">BASE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#获取临时文件夹的路径</span><span class="token comment" spellcheck="true">#远程服务器链接信息</span>host <span class="token operator">=</span> <span class="token string">'xxxxxx'</span>port <span class="token operator">=</span> <span class="token number">22</span>username <span class="token operator">=</span> <span class="token string">'xxxx'</span>password <span class="token operator">=</span> <span class="token string">'xxxx'</span>remote <span class="token operator">=</span> <span class="token string">'/tmp/'</span>ip <span class="token operator">=</span> socket<span class="token punctuation">.</span>gethostbyname<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>gethostname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#获取运行电脑ip地址</span></code></pre><h4 id="2-2-3-引入ui文件"><a href="#2-2-3-引入ui文件" class="headerlink" title="2.2.3 引入ui文件"></a>2.2.3 引入ui文件</h4><pre class=" language-python"><code class="language-python">app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>ui <span class="token operator">=</span> uic<span class="token punctuation">.</span>loadUi<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'untitled5.ui'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="2-2-4-获取控件"><a href="#2-2-4-获取控件" class="headerlink" title="2.2.4 获取控件"></a>2.2.4 获取控件</h4><pre class=" language-python"><code class="language-python">select_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>find_address_button  <span class="token comment" spellcheck="true">#文件选择按钮</span>file_address_input<span class="token punctuation">:</span> QLineEdit <span class="token operator">=</span> ui<span class="token punctuation">.</span>file_address     <span class="token comment" spellcheck="true"># 显示文件地址输入框</span>code_label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#状态栏显示编码，新建一个label</span>dfgzRadio<span class="token punctuation">:</span> QRadioButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>dfgz      <span class="token comment" spellcheck="true">#单选按钮，代发工资</span>szrmbRadio<span class="token punctuation">:</span> QRadioButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>szrmb  <span class="token comment" spellcheck="true">#单选按钮，数字人民币</span>check_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>check_Button <span class="token comment" spellcheck="true">#检测按钮</span>my_download_remote_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>download_remote_button  <span class="token comment" spellcheck="true">#下载远程文件按钮</span>my_fetch_remote_lists_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>fetch_remote_lists_button <span class="token comment" spellcheck="true">#获取远程文件列表按钮</span>my_remote_list<span class="token punctuation">:</span> QListView <span class="token operator">=</span> ui<span class="token punctuation">.</span>remote_lists  <span class="token comment" spellcheck="true">#远程文件列表显示控制</span>log_content_area<span class="token punctuation">:</span> QPlainTextEdit <span class="token operator">=</span> ui<span class="token punctuation">.</span>log_content <span class="token comment" spellcheck="true">#日志显示区域控件</span>myupload_Button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>upload_Button <span class="token comment" spellcheck="true"># 文件上传按钮</span>myStatusBar<span class="token punctuation">:</span> QStatusBar <span class="token operator">=</span> ui<span class="token punctuation">.</span>statusbar                <span class="token comment" spellcheck="true">#状态栏</span><span class="token comment" spellcheck="true">#----状态栏显示ip开始----</span>ip_label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token punctuation">)</span>ip_info <span class="token operator">=</span> <span class="token string">'当前登录ip：'</span> <span class="token operator">+</span> ipip_label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>ip_info<span class="token punctuation">)</span>myStatusBar<span class="token punctuation">.</span>addPermanentWidget<span class="token punctuation">(</span>ip_label<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#----状态栏显示ip结束----</span>log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'{ip_label.text()}'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#日志区域添加当前ip信息</span></code></pre><h4 id="2-2-5-获取文件地址，绑定-文件选择按钮（点击），回显至-文件地址输入框，并检测文件编码"><a href="#2-2-5-获取文件地址，绑定-文件选择按钮（点击），回显至-文件地址输入框，并检测文件编码" class="headerlink" title="2.2.5 获取文件地址，绑定 文件选择按钮（点击），回显至 文件地址输入框，并检测文件编码"></a>2.2.5 获取文件地址，绑定 文件选择按钮（点击），回显至 文件地址输入框，并检测文件编码</h4><h5 id="2-2-5-1-检测文件编码"><a href="#2-2-5-1-检测文件编码" class="headerlink" title="2.2.5.1 检测文件编码"></a>2.2.5.1 检测文件编码</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">getTxtCode</span><span class="token punctuation">(</span>txt_path<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        detector <span class="token operator">=</span> chardet<span class="token punctuation">.</span>UniversalDetector<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>txt_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>                detector<span class="token punctuation">.</span>feed<span class="token punctuation">(</span>line<span class="token punctuation">)</span>                <span class="token keyword">if</span> detector<span class="token punctuation">.</span>done<span class="token punctuation">:</span>                    <span class="token keyword">break</span>            detector<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        f_charInfo<span class="token operator">=</span>detector<span class="token punctuation">.</span>result        txt_code<span class="token operator">=</span><span class="token string">'utf-8'</span>        <span class="token keyword">if</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token operator">==</span><span class="token string">'GB2312'</span><span class="token punctuation">:</span>            txt_code<span class="token operator">=</span><span class="token string">'GB18030'</span>        <span class="token keyword">if</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token operator">not</span> None <span class="token operator">and</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'GB2312'</span><span class="token punctuation">:</span>            txt_code<span class="token operator">=</span>f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token keyword">is</span>  None <span class="token punctuation">:</span>            txt_code <span class="token operator">=</span> <span class="token string">'未知'</span>        <span class="token keyword">return</span> txt_code        <span class="token comment" spellcheck="true"># return f_charInfo['encoding'] if f_charInfo['encoding'] is not None else '未知'</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'err'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'未知'</span></code></pre><h5 id="2-2-5-2-选择文件"><a href="#2-2-5-2-选择文件" class="headerlink" title="2.2.5.2 选择文件"></a>2.2.5.2 选择文件</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">selectFile</span><span class="token punctuation">(</span>file_address_input<span class="token punctuation">,</span> log_content_area<span class="token punctuation">,</span> code_label<span class="token punctuation">,</span> myStatusBar<span class="token punctuation">)</span><span class="token punctuation">:</span>    fd <span class="token operator">=</span> QFileDialog<span class="token punctuation">(</span><span class="token punctuation">)</span>    fd<span class="token punctuation">.</span>setFileMode<span class="token punctuation">(</span>QFileDialog<span class="token punctuation">.</span>FileMode<span class="token punctuation">.</span>ExistingFile<span class="token punctuation">)</span>    fd<span class="token punctuation">.</span>setDirectory<span class="token punctuation">(</span><span class="token string">'C:\\'</span><span class="token punctuation">)</span>    fd<span class="token punctuation">.</span>setNameFilter<span class="token punctuation">(</span><span class="token string">'*.txt'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> fd<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        file_address_input<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---读取待上传的文件地址成功---'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        suffix <span class="token operator">=</span> fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---读取待上传的文件后缀---'</span><span class="token punctuation">)</span>        suffix_content <span class="token operator">=</span> <span class="token string">'后缀为：'</span> <span class="token operator">+</span> suffix        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>suffix_content<span class="token punctuation">)</span>        code <span class="token operator">=</span> getTxtCode<span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#调用文件编码检测函数</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---读取待上传的文件编码---'</span><span class="token punctuation">)</span>        code_content <span class="token operator">=</span> <span class="token string">'编码为：'</span> <span class="token operator">+</span> code        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>code_content<span class="token punctuation">)</span>        <span class="token keyword">if</span> code <span class="token operator">==</span> <span class="token string">'ascii'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'gb2312'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'gbk'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'GB2312'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'utf-8'</span><span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'文件编码符合规范'</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> code <span class="token operator">==</span> <span class="token string">'UTF-16'</span><span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'文件编码不符合规范，请检查文件编码'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'文件编码未知'</span><span class="token punctuation">)</span>        code_label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>code<span class="token punctuation">)</span>        myStatusBar<span class="token punctuation">.</span>addPermanentWidget<span class="token punctuation">(</span>code_label<span class="token punctuation">)</span></code></pre><h5 id="2-2-5-3-文件选择按钮的绑定文件选择函数"><a href="#2-2-5-3-文件选择按钮的绑定文件选择函数" class="headerlink" title="2.2.5.3 文件选择按钮的绑定文件选择函数"></a>2.2.5.3 文件选择按钮的绑定文件选择函数</h5><pre class=" language-python"><code class="language-python">select_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> selectFile<span class="token punctuation">(</span>file_address_input<span class="token punctuation">,</span> log_content_area<span class="token punctuation">,</span> code_label<span class="token punctuation">,</span> myStatusBar<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="2-2-6-检测文件格式"><a href="#2-2-6-检测文件格式" class="headerlink" title="2.2.6 检测文件格式"></a>2.2.6 检测文件格式</h4><h5 id="2-2-6-1-检测txt文件内容格式"><a href="#2-2-6-1-检测txt文件内容格式" class="headerlink" title="2.2.6.1 检测txt文件内容格式"></a>2.2.6.1 检测txt文件内容格式</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">check_txt_content</span><span class="token punctuation">(</span>dfgzRadio<span class="token punctuation">,</span>pldbRadio<span class="token punctuation">,</span>szrmbRadio<span class="token punctuation">,</span>plxxwhRadio<span class="token punctuation">,</span>code<span class="token punctuation">,</span>file_address<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token operator">not</span> dfgzRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token operator">not</span> pldbRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token operator">not</span> szrmbRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token operator">not</span> plxxwhRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"请先选择检测类型！！"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'请先选择检测类型！！'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>file_address<span class="token punctuation">)</span><span class="token punctuation">:</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"选择的文件不存在，请检测文件地址"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'选择的文件不存在，请检测文件地址'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token comment" spellcheck="true">#代发工资检测---格式  1|6230662035xxxxxxxx|姓名|100.00</span>    <span class="token comment" spellcheck="true">##常见错误2   包含其他字符 如字符串符号、空格</span>    <span class="token comment" spellcheck="true">###常见错误2  行长度不足，使用|分割之后存在空白或者分割后的部分不足</span>    <span class="token comment" spellcheck="true">###常见错误3 金额未填写，或者未保留2位数字</span>    <span class="token comment" spellcheck="true">##常见错误4</span>    <span class="token keyword">if</span> dfgzRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_address<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>code<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'代发工资开始检测'</span><span class="token punctuation">)</span>            fail_num<span class="token operator">=</span><span class="token number">0</span>            <span class="token keyword">for</span> i<span class="token punctuation">,</span> line <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token string">"'"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">'"'</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">"\t"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i+1}行包含特殊字符：{line}'</span><span class="token punctuation">)</span>                    fail_num<span class="token operator">=</span>fail_num<span class="token operator">+</span><span class="token number">1</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">4</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">4</span><span class="token punctuation">:</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行格式错误：{line}'</span><span class="token punctuation">)</span>                    fail_num <span class="token operator">=</span> fail_num <span class="token operator">+</span> <span class="token number">1</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token number">2</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span><span class="token number">2</span><span class="token punctuation">:</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行金额错误：{line}'</span><span class="token punctuation">)</span>                    fail_num <span class="token operator">=</span> fail_num <span class="token operator">+</span> <span class="token number">1</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'代发工资文件检测结束,共发现{fail_num}处错误'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 数字人民币代发检测 格式：1|009102xxxxxx|100.00|TR05|C213|TF99|姓名|钱包名|1</span>    <span class="token keyword">if</span> szrmbRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_address<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>code<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            fail_num_szrmb <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">for</span> i<span class="token punctuation">,</span> line <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token string">"'"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">'"'</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">"\t"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行包含特殊字符:{line}'</span><span class="token punctuation">)</span>                    fail_num_szrmb<span class="token operator">=</span>fail_num_szrmb<span class="token operator">+</span><span class="token number">1</span>                    <span class="token keyword">continue</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">12</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">12</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行格式错误：{line}'</span><span class="token punctuation">)</span>                    fail_num_szrmb <span class="token operator">=</span> fail_num_szrmb <span class="token operator">+</span> <span class="token number">1</span>                    <span class="token keyword">continue</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>                        line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">:</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行金额错误：{line}'</span><span class="token punctuation">)</span>                    fail_num_szrmb <span class="token operator">=</span> fail_num_szrmb <span class="token operator">+</span> <span class="token number">1</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'数字人民币代发文件检测结束,共发现{fail_num_szrmb}处错误'</span><span class="token punctuation">)</span></code></pre><h5 id="2-2-6-1-检测按钮绑定内容格式函数"><a href="#2-2-6-1-检测按钮绑定内容格式函数" class="headerlink" title="2.2.6.1 检测按钮绑定内容格式函数"></a>2.2.6.1 检测按钮绑定内容格式函数</h5><pre class=" language-python"><code class="language-python">check_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> check_txt_content<span class="token punctuation">(</span>dfgzRadio<span class="token punctuation">,</span>pldbRadio<span class="token punctuation">,</span>szrmbRadio<span class="token punctuation">,</span>plxxwhRadio<span class="token punctuation">,</span>code_label<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>file_address_input<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="2-2-7-上传文件"><a href="#2-2-7-上传文件" class="headerlink" title="2.2.7 上传文件"></a>2.2.7 上传文件</h4><h5 id="2-2-7-1-SFTP连接函数"><a href="#2-2-7-1-SFTP连接函数" class="headerlink" title="2.2.7.1 SFTP连接函数"></a>2.2.7.1 SFTP连接函数</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">connect_to_sftp</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 创建SSHClient对象</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        ssh <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 设置自动添加主机密钥</span>        ssh<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 连接到服务器</span>        ssh<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>hostname<span class="token operator">=</span>hostname<span class="token punctuation">,</span> port<span class="token operator">=</span>port<span class="token punctuation">,</span> username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 创建SFTP对象</span>        sftp <span class="token operator">=</span> ssh<span class="token punctuation">.</span>open_sftp<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 返回SFTP对象</span>        <span class="token keyword">return</span> sftp    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'upload exception:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'连接服务器失败，连接尝试失败'</span><span class="token punctuation">)</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"连接服务器失败，连接尝试失败。！！"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h5 id="2-2-7-2-SFTP上传函数"><a href="#2-2-7-2-SFTP上传函数" class="headerlink" title="2.2.7.2 SFTP上传函数"></a>2.2.7.2 SFTP上传函数</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sftp_upload</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> local<span class="token punctuation">,</span> remote<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    local_name <span class="token operator">=</span> local<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 获取文件名</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        remote_file_path <span class="token operator">=</span> remote <span class="token operator">+</span>  local_name        <span class="token comment" spellcheck="true"># remote_file_path = os.path.join(remote , local_name)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>remote_file_path<span class="token punctuation">)</span>        sftp<span class="token operator">=</span>connect_to_sftp<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#SFTP连接远程服务器</span>        <span class="token comment" spellcheck="true"># 获取本地文件大小</span>        local_file_size <span class="token operator">=</span> os<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>local<span class="token punctuation">)</span><span class="token punctuation">.</span>st_size        <span class="token keyword">print</span><span class="token punctuation">(</span>local_file_size<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"local_file_size:{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>local_file_size<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 打印上传进度</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>local<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">def</span> <span class="token function">callback</span><span class="token punctuation">(</span>transferred<span class="token punctuation">,</span> local_file_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                percent <span class="token operator">=</span> float<span class="token punctuation">(</span>transferred<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> local_file_size                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"上传了 %.2f%% "</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>                log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">"上传了 %.2f%% "</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># transfer 32768 bytes as SSH slice, put local file to remote</span>            sftp<span class="token punctuation">.</span>putfo<span class="token punctuation">(</span>f<span class="token punctuation">,</span> remote_file_path<span class="token punctuation">,</span> local_file_size<span class="token punctuation">,</span> callback<span class="token operator">=</span>callback<span class="token punctuation">)</span>        sftp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'上传成功'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---文件上传成功---'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---文件上传至'</span> <span class="token operator">+</span> remote_file_path <span class="token operator">+</span> <span class="token string">'----'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'upload exception:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>        fail_content <span class="token operator">=</span> <span class="token string">'upload exception:'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>e<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>fail_content<span class="token punctuation">)</span></code></pre><h5 id="2-2-7-3-上传按钮绑定SFTP上传函数"><a href="#2-2-7-3-上传按钮绑定SFTP上传函数" class="headerlink" title="2.2.7.3 上传按钮绑定SFTP上传函数"></a>2.2.7.3 上传按钮绑定SFTP上传函数</h5><pre class=" language-python"><code class="language-python">myupload_Button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>    <span class="token keyword">lambda</span><span class="token punctuation">:</span> sftp_upload<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> file_address_input<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> remote<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="2-2-8-获取服务器文件列表"><a href="#2-2-8-获取服务器文件列表" class="headerlink" title="2.2.8 获取服务器文件列表"></a>2.2.8 获取服务器文件列表</h4><h5 id="2-2-8-1-获取远程文件列表按钮"><a href="#2-2-8-1-获取远程文件列表按钮" class="headerlink" title="2.2.8.1 获取远程文件列表按钮"></a>2.2.8.1 获取远程文件列表按钮</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fecth_remote_list</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'开始获取远程报表服务器下txt文件'</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        sftp <span class="token operator">=</span> connect_to_sftp<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span>        files<span class="token operator">=</span><span class="token punctuation">[</span>x<span class="token punctuation">.</span>filename <span class="token keyword">for</span> x <span class="token keyword">in</span> sorted<span class="token punctuation">(</span>sftp<span class="token punctuation">.</span>listdir_attr<span class="token punctuation">(</span>remote<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> f<span class="token punctuation">:</span> f<span class="token punctuation">.</span>st_mtime<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 按修改时间排序</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'upload exception:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'获取远程文件列表失败'</span><span class="token punctuation">)</span>    file_txts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>        <span class="token keyword">if</span> file<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.txt'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         file_txts<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>    slm <span class="token operator">=</span> QStringListModel<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建model</span>    slm<span class="token punctuation">.</span>setStringList<span class="token punctuation">(</span>file_txts<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将数据设置到model</span>    my_remote_list<span class="token punctuation">.</span>setModel<span class="token punctuation">(</span>slm<span class="token punctuation">)</span></code></pre><h5 id="2-2-8-1-获取远程文件列表按钮-绑定-获取远程文件列表按钮"><a href="#2-2-8-1-获取远程文件列表按钮-绑定-获取远程文件列表按钮" class="headerlink" title="2.2.8.1 获取远程文件列表按钮 绑定 获取远程文件列表按钮"></a>2.2.8.1 获取远程文件列表按钮 绑定 获取远程文件列表按钮</h5><pre class=" language-python"><code class="language-python">my_fetch_remote_lists_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> fecth_remote_list<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="2-2-9-下载远程文件"><a href="#2-2-9-下载远程文件" class="headerlink" title="2.2.9 下载远程文件"></a>2.2.9 下载远程文件</h4><h5 id="2-2-9-1-下载文件函数"><a href="#2-2-9-1-下载文件函数" class="headerlink" title="2.2.9.1 下载文件函数"></a>2.2.9.1 下载文件函数</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">download_remote_list</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    selected <span class="token operator">=</span> my_remote_list<span class="token punctuation">.</span>currentIndex<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#获取选中的远程服务器文件名称</span>    <span class="token keyword">if</span> selected <span class="token keyword">is</span>  None<span class="token punctuation">:</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"请先获取远程文件列表，并选择其中一项！！"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'未选择远程报表服务器上任何文件，请先选择'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'选择远程报表服务器文件：{selected}'</span><span class="token punctuation">)</span>        selected_file_path<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> selected<span class="token punctuation">)</span>        sftp <span class="token operator">=</span> connect_to_sftp<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span>        directory <span class="token operator">=</span> QFileDialog<span class="token punctuation">.</span>getExistingDirectory<span class="token punctuation">(</span>None<span class="token punctuation">,</span> <span class="token string">"选取文件夹"</span><span class="token punctuation">,</span> <span class="token string">"C:/"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 起始路径</span>        local_path<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>directory<span class="token punctuation">,</span>selected<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'选择本地保持路径：{directory}，开始下载{selected}'</span><span class="token punctuation">)</span>        remote_file_size <span class="token operator">=</span> sftp<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>selected_file_path<span class="token punctuation">)</span><span class="token punctuation">.</span>st_size      <span class="token comment" spellcheck="true"># 获得远程文件大小</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"remote_file_size:{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>remote_file_size<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"local_path:{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>local_path<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 打印下载进程</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>local_path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">def</span> <span class="token function">callback</span><span class="token punctuation">(</span>transferred<span class="token punctuation">,</span> remote_file_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'local_path:--------'</span><span class="token punctuation">)</span>                percent <span class="token operator">=</span> float<span class="token punctuation">(</span>transferred<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> remote_file_size                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"下载了 %.2f%% "</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>                log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">"下载了 %.2f%% "</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># transfer 32768 bytes as SSH slice, get remote file to local</span>            sftp<span class="token punctuation">.</span>getfo<span class="token punctuation">(</span>selected_file_path<span class="token punctuation">,</span> f<span class="token punctuation">,</span> callback<span class="token operator">=</span>callback<span class="token punctuation">)</span></code></pre><h5 id="2-2-9-1-下载文件按钮-绑定-下载文件函数"><a href="#2-2-9-1-下载文件按钮-绑定-下载文件函数" class="headerlink" title="2.2.9.1 下载文件按钮 绑定 下载文件函数"></a>2.2.9.1 下载文件按钮 绑定 下载文件函数</h5><pre class=" language-python"><code class="language-python">my_download_remote_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> download_remote_list<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h2 id="三、全部代码"><a href="#三、全部代码" class="headerlink" title="三、全部代码"></a>三、全部代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token punctuation">.</span>path<span class="token keyword">import</span> sys<span class="token keyword">import</span> chardet<span class="token keyword">import</span> paramiko<span class="token keyword">from</span> PyQt5 <span class="token keyword">import</span> uic<span class="token keyword">from</span> PyQt5<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QStringListModel<span class="token keyword">from</span> PyQt5<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span>  QApplication<span class="token punctuation">,</span> QFileDialog<span class="token punctuation">,</span> QPushButton<span class="token punctuation">,</span> QLineEdit<span class="token punctuation">,</span> QStatusBar<span class="token punctuation">,</span> QLabel<span class="token punctuation">,</span> QPlainTextEdit<span class="token punctuation">,</span> QRadioButton<span class="token punctuation">,</span> QListView<span class="token punctuation">,</span> QMessageBox<span class="token keyword">import</span> socketBASE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>host <span class="token operator">=</span> <span class="token string">'xxxxxx'</span>port <span class="token operator">=</span> <span class="token number">22</span>username <span class="token operator">=</span> <span class="token string">'xxxx'</span>password <span class="token operator">=</span> <span class="token string">'xxxx'</span>remote <span class="token operator">=</span> <span class="token string">'/tmp/'</span><span class="token comment" spellcheck="true"># host='127.0.0.1'</span><span class="token comment" spellcheck="true"># port = 26</span><span class="token comment" spellcheck="true"># username = '0841'</span><span class="token comment" spellcheck="true"># password = 'WW'</span><span class="token comment" spellcheck="true"># local = ''</span><span class="token comment" spellcheck="true"># remote ='/ping/'</span><span class="token keyword">def</span> <span class="token function">getIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 函数 gethostname() 返回当前正在执行 Python 的系统主机名</span>    res <span class="token operator">=</span> socket<span class="token punctuation">.</span>gethostbyname<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>gethostname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">getTxtCode</span><span class="token punctuation">(</span>txt_path<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        detector <span class="token operator">=</span> chardet<span class="token punctuation">.</span>UniversalDetector<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>txt_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>                detector<span class="token punctuation">.</span>feed<span class="token punctuation">(</span>line<span class="token punctuation">)</span>                <span class="token keyword">if</span> detector<span class="token punctuation">.</span>done<span class="token punctuation">:</span>                    <span class="token keyword">break</span>            detector<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        f_charInfo<span class="token operator">=</span>detector<span class="token punctuation">.</span>result        txt_code<span class="token operator">=</span><span class="token string">'utf-8'</span>        <span class="token keyword">if</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token operator">==</span><span class="token string">'GB2312'</span><span class="token punctuation">:</span>            txt_code<span class="token operator">=</span><span class="token string">'GB18030'</span>        <span class="token keyword">if</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token operator">not</span> None <span class="token operator">and</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'GB2312'</span><span class="token punctuation">:</span>            txt_code<span class="token operator">=</span>f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> f_charInfo<span class="token punctuation">[</span><span class="token string">'encoding'</span><span class="token punctuation">]</span> <span class="token keyword">is</span>  None <span class="token punctuation">:</span>            txt_code <span class="token operator">=</span> <span class="token string">'未知'</span>        <span class="token keyword">return</span> txt_code        <span class="token comment" spellcheck="true"># return f_charInfo['encoding'] if f_charInfo['encoding'] is not None else '未知'</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'err'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'未知'</span><span class="token keyword">def</span> <span class="token function">check_txt_content</span><span class="token punctuation">(</span>dfgzRadio<span class="token punctuation">,</span>pldbRadio<span class="token punctuation">,</span>szrmbRadio<span class="token punctuation">,</span>plxxwhRadio<span class="token punctuation">,</span>code<span class="token punctuation">,</span>file_address<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token operator">not</span> dfgzRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token operator">not</span> pldbRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token operator">not</span> szrmbRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token operator">not</span> plxxwhRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"请先选择检测类型！！"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'请先选择检测类型！！'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>file_address<span class="token punctuation">)</span><span class="token punctuation">:</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"选择的文件不存在，请检测文件地址"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'选择的文件不存在，请检测文件地址'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token comment" spellcheck="true">#代发工资检测---格式  1|6230662035xxxxxxxx|姓名|100.00</span>    <span class="token comment" spellcheck="true">##常见错误2   包含其他字符 如字符串符号、空格</span>    <span class="token comment" spellcheck="true">###常见错误2  行长度不足，使用|分割之后存在空白或者分割后的部分不足</span>    <span class="token comment" spellcheck="true">###常见错误3 金额未填写，或者未保留2位数字</span>    <span class="token comment" spellcheck="true">##常见错误4</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'开始检测文件内容'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> dfgzRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'代发工资开始检测'</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_address<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>code<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'代发工资开始检测'</span><span class="token punctuation">)</span>            fail_num<span class="token operator">=</span><span class="token number">0</span>            <span class="token keyword">for</span> i<span class="token punctuation">,</span> line <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token string">"'"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">'"'</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">"\t"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'第{i+1}行包含特殊字符：{line}'</span><span class="token punctuation">)</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i+1}行包含特殊字符：{line}'</span><span class="token punctuation">)</span>                    fail_num<span class="token operator">=</span>fail_num<span class="token operator">+</span><span class="token number">1</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">4</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">4</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行格式错误：{line}'</span><span class="token punctuation">)</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行格式错误：{line}'</span><span class="token punctuation">)</span>                    fail_num <span class="token operator">=</span> fail_num <span class="token operator">+</span> <span class="token number">1</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token number">2</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span><span class="token number">2</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行金额错误：{line}'</span><span class="token punctuation">)</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行金额错误：{line}'</span><span class="token punctuation">)</span>                    fail_num <span class="token operator">=</span> fail_num <span class="token operator">+</span> <span class="token number">1</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'代发工资文件检测结束'</span><span class="token punctuation">)</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'代发工资文件检测结束,共发现{fail_num}处错误'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#----------批量调拨检测-----------</span>    <span class="token keyword">if</span> pldbRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_address<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'GB18030'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                <span class="token keyword">pass</span>    <span class="token comment" spellcheck="true"># 数字人民币代发检测 格式：1|009102xxxxxx|100.00|TR05|C213|TF99|姓名|钱包名|1</span>    <span class="token keyword">if</span> szrmbRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'数字人民币代发检测'</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_address<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>code<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            fail_num_szrmb <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">for</span> i<span class="token punctuation">,</span> line <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token string">"'"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">'"'</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">"\t"</span> <span class="token keyword">in</span> line <span class="token operator">or</span> <span class="token string">" "</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行包含特殊字符：{line}'</span><span class="token punctuation">)</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行包含特殊字符:{line}'</span><span class="token punctuation">)</span>                    fail_num_szrmb<span class="token operator">=</span>fail_num_szrmb<span class="token operator">+</span><span class="token number">1</span>                    <span class="token keyword">continue</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">12</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">12</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行格式错误：{line}'</span><span class="token punctuation">)</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行格式错误：{line}'</span><span class="token punctuation">)</span>                    fail_num_szrmb <span class="token operator">=</span> fail_num_szrmb <span class="token operator">+</span> <span class="token number">1</span>                    <span class="token keyword">continue</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">or</span> len<span class="token punctuation">(</span>                        line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行金额错误：{line}'</span><span class="token punctuation">)</span>                    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'第{i + 1}行金额错误：{line}'</span><span class="token punctuation">)</span>                    fail_num_szrmb <span class="token operator">=</span> fail_num_szrmb <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数字人民币代发文件检测结束'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'数字人民币代发文件检测结束,共发现{fail_num_szrmb}处错误'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#批量信息维护检测</span>    <span class="token keyword">if</span> plxxwhRadio<span class="token punctuation">.</span>isChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_address<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>code<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">pass</span><span class="token comment" spellcheck="true"># 连接到SFTP服务器</span><span class="token keyword">def</span> <span class="token function">connect_to_sftp</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 创建SSHClient对象</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        ssh <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 设置自动添加主机密钥</span>        ssh<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 连接到服务器</span>        ssh<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>hostname<span class="token operator">=</span>hostname<span class="token punctuation">,</span> port<span class="token operator">=</span>port<span class="token punctuation">,</span> username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 创建SFTP对象</span>        sftp <span class="token operator">=</span> ssh<span class="token punctuation">.</span>open_sftp<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 返回SFTP对象</span>        <span class="token keyword">return</span> sftp    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'upload exception:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'连接服务器失败，连接尝试失败'</span><span class="token punctuation">)</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"连接服务器失败，连接尝试失败。！！"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">fecth_remote_list</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------'</span><span class="token punctuation">)</span>    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'开始获取远程报表服务器下txt文件'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-=-=-=-=-=-='</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        sftp <span class="token operator">=</span> connect_to_sftp<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span>        files<span class="token operator">=</span><span class="token punctuation">[</span>x<span class="token punctuation">.</span>filename <span class="token keyword">for</span> x <span class="token keyword">in</span> sorted<span class="token punctuation">(</span>sftp<span class="token punctuation">.</span>listdir_attr<span class="token punctuation">(</span>remote<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> f<span class="token punctuation">:</span> f<span class="token punctuation">.</span>st_mtime<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'upload exception:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'获取远程文件列表失败'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>    file_txts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>        <span class="token keyword">if</span> file<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.txt'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token comment" spellcheck="true"># filepath =os.path.join(remote, file)</span>         <span class="token comment" spellcheck="true"># file_txts.append(filepath)</span>         file_txts<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>    slm <span class="token operator">=</span> QStringListModel<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建model</span>    slm<span class="token punctuation">.</span>setStringList<span class="token punctuation">(</span>file_txts<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将数据设置到model</span>    my_remote_list<span class="token punctuation">.</span>setModel<span class="token punctuation">(</span>slm<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">download_remote_list</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    selected <span class="token operator">=</span> my_remote_list<span class="token punctuation">.</span>currentIndex<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>selected<span class="token punctuation">)</span>    <span class="token keyword">if</span> selected <span class="token keyword">is</span>  None<span class="token punctuation">:</span>        msgBox <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">"请先获取远程文件列表，并选择其中一项！！"</span><span class="token punctuation">)</span>        msgBox<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'未选择远程报表服务器上任何文件，请先选择'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'选择远程报表服务器文件：{selected}'</span><span class="token punctuation">)</span>        selected_file_path<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> selected<span class="token punctuation">)</span>        sftp <span class="token operator">=</span> connect_to_sftp<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># item = my_remote_list[selected]</span>        <span class="token comment" spellcheck="true"># print(selected)</span>        <span class="token comment" spellcheck="true"># file_name=selected.split('/')[-1]</span>        directory <span class="token operator">=</span> QFileDialog<span class="token punctuation">.</span>getExistingDirectory<span class="token punctuation">(</span>None<span class="token punctuation">,</span> <span class="token string">"选取文件夹"</span><span class="token punctuation">,</span> <span class="token string">"C:/"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 起始路径</span>        local_path<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>directory<span class="token punctuation">,</span>selected<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'选择本地保持路径：{directory}，开始下载{selected}'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># get remote file size</span>        remote_file_size <span class="token operator">=</span> sftp<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>selected_file_path<span class="token punctuation">)</span><span class="token punctuation">.</span>st_size        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"remote_file_size:{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>remote_file_size<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"local_path:{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>local_path<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print progress</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>local_path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">def</span> <span class="token function">callback</span><span class="token punctuation">(</span>transferred<span class="token punctuation">,</span> remote_file_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'local_path:--------'</span><span class="token punctuation">)</span>                percent <span class="token operator">=</span> float<span class="token punctuation">(</span>transferred<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> remote_file_size                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Download %.2f%% of the file."</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>                log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">"下载了 %.2f%% "</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># transfer 32768 bytes as SSH slice, get remote file to local</span>            sftp<span class="token punctuation">.</span>getfo<span class="token punctuation">(</span>selected_file_path<span class="token punctuation">,</span> f<span class="token punctuation">,</span> callback<span class="token operator">=</span>callback<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">sftp_upload</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> local<span class="token punctuation">,</span> remote<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    local_name <span class="token operator">=</span> local<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        remote_file_path <span class="token operator">=</span> remote <span class="token operator">+</span>  local_name        <span class="token comment" spellcheck="true"># remote_file_path = os.path.join(remote , local_name)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>remote_file_path<span class="token punctuation">)</span>        sftp<span class="token operator">=</span>connect_to_sftp<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># get local file size</span>        local_file_size <span class="token operator">=</span> os<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>local<span class="token punctuation">)</span><span class="token punctuation">.</span>st_size        <span class="token keyword">print</span><span class="token punctuation">(</span>local_file_size<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"local_file_size:{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>local_file_size<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print progress</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>local<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">def</span> <span class="token function">callback</span><span class="token punctuation">(</span>transferred<span class="token punctuation">,</span> local_file_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                percent <span class="token operator">=</span> float<span class="token punctuation">(</span>transferred<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> local_file_size                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Upload %.2f%% of the file."</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>                log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">"Upload %.2f%% of the file."</span> <span class="token operator">%</span> percent<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># transfer 32768 bytes as SSH slice, put local file to remote</span>            sftp<span class="token punctuation">.</span>putfo<span class="token punctuation">(</span>f<span class="token punctuation">,</span> remote_file_path<span class="token punctuation">,</span> local_file_size<span class="token punctuation">,</span> callback<span class="token operator">=</span>callback<span class="token punctuation">)</span>        sftp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'上传成功'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---文件上传成功---'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---文件上传至'</span> <span class="token operator">+</span> remote_file_path <span class="token operator">+</span> <span class="token string">'----'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'upload exception:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>        fail_content <span class="token operator">=</span> <span class="token string">'upload exception:'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>e<span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>fail_content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">romote_file_list</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> local<span class="token punctuation">,</span> remote<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span><span class="token punctuation">:</span>    local_name <span class="token operator">=</span> local<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        sf <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>Transport<span class="token punctuation">(</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>        sf<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">)</span>        sftp <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SFTPClient<span class="token punctuation">.</span>from_transport<span class="token punctuation">(</span>sf<span class="token punctuation">)</span>        sftp<span class="token punctuation">.</span>put<span class="token punctuation">(</span>local<span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> local_name<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 上传文件</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'上传成功'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---文件上传成功---'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'upload exception:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">selectFile</span><span class="token punctuation">(</span>file_address_input<span class="token punctuation">,</span> log_content_area<span class="token punctuation">,</span> code_label<span class="token punctuation">,</span> myStatusBar<span class="token punctuation">)</span><span class="token punctuation">:</span>    fd <span class="token operator">=</span> QFileDialog<span class="token punctuation">(</span><span class="token punctuation">)</span>    fd<span class="token punctuation">.</span>setFileMode<span class="token punctuation">(</span>QFileDialog<span class="token punctuation">.</span>FileMode<span class="token punctuation">.</span>ExistingFile<span class="token punctuation">)</span>    fd<span class="token punctuation">.</span>setDirectory<span class="token punctuation">(</span><span class="token string">'C:\\'</span><span class="token punctuation">)</span>    fd<span class="token punctuation">.</span>setNameFilter<span class="token punctuation">(</span><span class="token string">'*.txt'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> fd<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        file_address_input<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---读取待上传的文件地址成功---'</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        suffix <span class="token operator">=</span> fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---读取待上传的文件后缀---'</span><span class="token punctuation">)</span>        suffix_content <span class="token operator">=</span> <span class="token string">'后缀为：'</span> <span class="token operator">+</span> suffix        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>suffix_content<span class="token punctuation">)</span>        code <span class="token operator">=</span> getTxtCode<span class="token punctuation">(</span>fd<span class="token punctuation">.</span>selectedFiles<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'---读取待上传的文件编码---'</span><span class="token punctuation">)</span>        code_content <span class="token operator">=</span> <span class="token string">'编码为：'</span> <span class="token operator">+</span> code        log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>code_content<span class="token punctuation">)</span>        <span class="token keyword">if</span> code <span class="token operator">==</span> <span class="token string">'ascii'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'gb2312'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'gbk'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'GB2312'</span> <span class="token operator">or</span> code <span class="token operator">==</span> <span class="token string">'utf-8'</span><span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'文件编码符合规范'</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> code <span class="token operator">==</span> <span class="token string">'UTF-16'</span><span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'文件编码不符合规范，请检查文件编码'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span><span class="token string">'文件编码未知'</span><span class="token punctuation">)</span>        code_label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>code<span class="token punctuation">)</span>        myStatusBar<span class="token punctuation">.</span>addPermanentWidget<span class="token punctuation">(</span>code_label<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>    ui <span class="token operator">=</span> uic<span class="token punctuation">.</span>loadUi<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'untitled5.ui'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    select_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>find_address_button    file_address_input<span class="token punctuation">:</span> QLineEdit <span class="token operator">=</span> ui<span class="token punctuation">.</span>file_address    myStatusBar<span class="token punctuation">:</span> QStatusBar <span class="token operator">=</span> ui<span class="token punctuation">.</span>statusbar    ip_label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token punctuation">)</span>    ip_info <span class="token operator">=</span> <span class="token string">'当前登录ip：'</span> <span class="token operator">+</span> getIp<span class="token punctuation">(</span><span class="token punctuation">)</span>    ip_label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>ip_info<span class="token punctuation">)</span>    code_label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token punctuation">)</span>    dfgzRadio<span class="token punctuation">:</span> QRadioButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>dfgz    pldbRadio<span class="token punctuation">:</span> QRadioButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>pldb    plxxwhRadio<span class="token punctuation">:</span> QRadioButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>plxxwh    szrmbRadio<span class="token punctuation">:</span> QRadioButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>szrmb    pldbRadio<span class="token punctuation">.</span>hide<span class="token punctuation">(</span><span class="token punctuation">)</span>    plxxwhRadio<span class="token punctuation">.</span>hide<span class="token punctuation">(</span><span class="token punctuation">)</span>    check_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>check_Button    <span class="token comment" spellcheck="true"># my_download_checkfail_Button: QPushButton=ui.download_checkfail_Button</span>    <span class="token comment" spellcheck="true"># my_download_report_button: QPushButton = ui.download_report_button</span>    <span class="token comment" spellcheck="true"># my_download_checkfail_Button.hide()</span>    <span class="token comment" spellcheck="true"># my_download_report_button.hide()</span>    my_download_remote_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>download_remote_button    my_fetch_remote_lists_button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>fetch_remote_lists_button    my_remote_list<span class="token punctuation">:</span> QListView <span class="token operator">=</span> ui<span class="token punctuation">.</span>remote_lists    myStatusBar<span class="token punctuation">.</span>addPermanentWidget<span class="token punctuation">(</span>ip_label<span class="token punctuation">)</span>    log_content_area<span class="token punctuation">:</span> QPlainTextEdit <span class="token operator">=</span> ui<span class="token punctuation">.</span>log_content    log_content_area<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>f<span class="token string">'{ip_label.text()}'</span><span class="token punctuation">)</span>    myupload_Button<span class="token punctuation">:</span> QPushButton <span class="token operator">=</span> ui<span class="token punctuation">.</span>upload_Button    select_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> selectFile<span class="token punctuation">(</span>file_address_input<span class="token punctuation">,</span> log_content_area<span class="token punctuation">,</span> code_label<span class="token punctuation">,</span> myStatusBar<span class="token punctuation">)</span><span class="token punctuation">)</span>    my_fetch_remote_lists_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> fecth_remote_list<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span>    myupload_Button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>        <span class="token keyword">lambda</span><span class="token punctuation">:</span> sftp_upload<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> file_address_input<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> remote<span class="token punctuation">,</span> log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span>    check_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> check_txt_content<span class="token punctuation">(</span>dfgzRadio<span class="token punctuation">,</span>pldbRadio<span class="token punctuation">,</span>szrmbRadio<span class="token punctuation">,</span>plxxwhRadio<span class="token punctuation">,</span>code_label<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>file_address_input<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span>    my_download_remote_button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> download_remote_list<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span>remote<span class="token punctuation">,</span>my_remote_list<span class="token punctuation">,</span>log_content_area<span class="token punctuation">)</span><span class="token punctuation">)</span>    ui<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h2 id="四、打包"><a href="#四、打包" class="headerlink" title="四、打包"></a>四、打包</h2><h3 id="4-1-前置说明"><a href="#4-1-前置说明" class="headerlink" title="4.1  前置说明"></a>4.1  前置说明</h3><h4 id="4-1-1文件列表"><a href="#4-1-1文件列表" class="headerlink" title="4.1.1文件列表"></a>4.1.1文件列表</h4><ul><li><input disabled type="checkbox"> hx_fenlei2.py</li><li><input disabled type="checkbox"> untitled5.ui</li></ul><h4 id="4-1-2-安装pyinstaller"><a href="#4-1-2-安装pyinstaller" class="headerlink" title="4.1.2 安装pyinstaller"></a>4.1.2 安装pyinstaller</h4><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> pyinstaller</code></pre><h3 id="4-2-打包生成-spec文件"><a href="#4-2-打包生成-spec文件" class="headerlink" title="4.2 打包生成.spec文件"></a>4.2 打包生成.spec文件</h3><pre class=" language-bash"><code class="language-bash">pyinstaller -F hx_fenlei2.py</code></pre><p>说明：1.生成hx_fenlei2.spec文件</p><p>2.pyinstaller常用打包参数</p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>-D, –onedir</td><td>打包成一个文件夹</td></tr><tr><td>-F, –onefile</td><td>打包成一个可执行文件(exe)</td></tr></tbody></table><h3 id="4-3-使用-spec文件打包"><a href="#4-3-使用-spec文件打包" class="headerlink" title="4.3 使用.spec文件打包"></a>4.3 使用.spec文件打包</h3><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> Analysis<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token string">'hx_fenlei2.py'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    pathex<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    binaries<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    datas<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'untitled5.ui'</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    hiddenimports<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    hookspath<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    hooksconfig<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    runtime_hooks<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    excludes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    noarchive<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    optimize<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span>pyz <span class="token operator">=</span> PYZ<span class="token punctuation">(</span>a<span class="token punctuation">.</span>pure<span class="token punctuation">)</span>exe <span class="token operator">=</span> EXE<span class="token punctuation">(</span>    pyz<span class="token punctuation">,</span>    a<span class="token punctuation">.</span>scripts<span class="token punctuation">,</span>    a<span class="token punctuation">.</span>binaries<span class="token punctuation">,</span>    a<span class="token punctuation">.</span>datas<span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    name<span class="token operator">=</span><span class="token string">'hx_fenlei2'</span><span class="token punctuation">,</span>    debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    bootloader_ignore_signals<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    strip<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    upx<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    console<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    upx_exclude<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    runtime_tmpdir<span class="token operator">=</span>None<span class="token punctuation">,</span>    disable_windowed_traceback<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    argv_emulation<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    target_arch<span class="token operator">=</span>None<span class="token punctuation">,</span>    codesign_identity<span class="token operator">=</span>None<span class="token punctuation">,</span>    entitlements_file<span class="token operator">=</span>None<span class="token punctuation">,</span>    icon<span class="token operator">=</span><span class="token string">'C:\\Users\\ww\\Desktop\\upload_df\\pythonProject4\\hx.ico'</span><span class="token punctuation">)</span></code></pre><p>主要修改说明：</p><p>修改<code>datas=[(&#39;上联地址.txt&#39;,&#39;.&#39;),(&#39;电话号码.txt&#39;,&#39;.&#39;),(&#39;ips_template.txt&#39;,&#39;.&#39;),(&#39;tels_template.txt&#39;,&#39;.&#39;)],</code></p><p>注意：存放位置为 ’ . ’ 时，表示为程序运行目录（windows：C:\Users\Administrator\AppData\Local\Temp_MEI190322，单文件模式运行时会自动解压到该目录) </p><p><code>console=False,</code>    cmd窗口不显示</p><p> <code>runtime_tmpdir=None,</code>            单文件模式</p><p><code>icon=&#39;C:\\Users\\ww\\Desktop\\ping\\pythonProject2\\PING.ico&#39;</code>        打包exe文件的图标地址</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>1.pyqt设计代码框架</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token punctuation">.</span>path<span class="token keyword">from</span> PyQt5 <span class="token keyword">import</span> uic<span class="token punctuation">,</span> QtWidgetsBASE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>    ui <span class="token operator">=</span> uic<span class="token punctuation">.</span>loadUi<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'untitled5.ui'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">'''    获取ui控件，设置事件    '''</span>    ui<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>2.兼容性问题</p><p>python 3.8.10之后不支持win7</p><p>PyQt5                     5.15.9</p><p>pyqt5-tools               5.15.9.3.3</p><p>Python             3.8.8   win32</p><p>pyinstaller               6.9.0</p><p>3.参考文献</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 运维 </tag>
            
            <tag> SFTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python运维工具之交换机网络状态</title>
      <link href="/2024/07/21/python-yun-wei-gong-ju-zhi-jiao-huan-ji-wang-luo-zhuang-tai/"/>
      <url>/2024/07/21/python-yun-wei-gong-ju-zhi-jiao-huan-ji-wang-luo-zhuang-tai/</url>
      
        <content type="html"><![CDATA[<h2 id="一、需求"><a href="#一、需求" class="headerlink" title="一、需求"></a>一、需求</h2><p>1.检测交换机网络状态，当离线、恢复、不稳定时可以发送短信</p><p>2.生成日志，保留每次检测结果</p><p>3.可以传入自己配置的交换机地址、发送短信的手机号</p><h2 id="二、具体开发思路"><a href="#二、具体开发思路" class="headerlink" title="二、具体开发思路"></a>二、具体开发思路</h2><h3 id="2-1-主要思路"><a href="#2-1-主要思路" class="headerlink" title="2.1 主要思路"></a>2.1 主要思路</h3><p>1.读取文件获取ip地址池与手机号列表</p><p>2.初始化所有交换机ip地址池网络状态</p><p>3.遍历交换机ip地址池，进行ping操作，每个地址分配一个线程，根据ping结果更新ip地址池状态</p><p>4.遍历ip地址池，满足条件的ip地址向用户发送短信</p><p>5.休眠40s进行下一次的3，4步骤</p><h3 id="2-2-读取文件获取ip地址池与手机号列表"><a href="#2-2-读取文件获取ip地址池与手机号列表" class="headerlink" title="2.2 读取文件获取ip地址池与手机号列表"></a>2.2 读取文件获取ip地址池与手机号列表</h3><h4 id="2-2-1引入模块"><a href="#2-2-1引入模块" class="headerlink" title="2.2.1引入模块"></a>2.2.1引入模块</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> argparse <span class="token comment" spellcheck="true"># 接受cmd参数，解析文件地址，获取交换机地址发送短信的手机号</span><span class="token keyword">import</span> shutil    <span class="token comment" spellcheck="true">#shutil.copy()获取默认的配置信息（交换机地址、手机号）</span><span class="token keyword">import</span> copy     <span class="token comment" spellcheck="true"># 初始化网络结果，进行深拷贝</span><span class="token keyword">import</span> os       <span class="token comment" spellcheck="true"># 获取运行时临时文件夹路径，打包后exe文件路径</span><span class="token keyword">import</span> sys      <span class="token comment" spellcheck="true"># 获取打包后exe文件路径</span><span class="token keyword">import</span> threading <span class="token comment" spellcheck="true"># 多线程进行ping操作</span><span class="token keyword">import</span> time<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date<span class="token punctuation">,</span> datetime<span class="token punctuation">,</span> timedelta<span class="token keyword">import</span> requests <span class="token comment" spellcheck="true"># 发送短信，通过接口发送post请求</span><span class="token keyword">import</span> json     <span class="token comment" spellcheck="true"># 短信接口 传参需要json类型</span><span class="token keyword">from</span> ping3 <span class="token keyword">import</span> ping <span class="token comment" spellcheck="true"># ping测试网络状态</span></code></pre><h4 id="2-2-2全局路径"><a href="#2-2-2全局路径" class="headerlink" title="2. 2.2全局路径"></a>2. 2.2全局路径</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取当前路径父路径（所在文件夹）</span>BASE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#获取打包后exe文件路径（所在文件夹）</span>BASE_EXE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>executable<span class="token punctuation">)</span></code></pre><h4 id="2-2-3-读取cmd运行传参并解析"><a href="#2-2-3-读取cmd运行传参并解析" class="headerlink" title="2.2.3 读取cmd运行传参并解析"></a>2.2.3 读取cmd运行传参并解析</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">parseArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 创建一个ArgumentParser对象</span>    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">'这是一个命令行运行bat_ping程序的说明'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 添加一个位置参数</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--ips'</span><span class="token punctuation">,</span> <span class="token string">'-i'</span><span class="token punctuation">,</span>type<span class="token operator">=</span>str<span class="token punctuation">,</span> default<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'上联地址.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>help<span class="token operator">=</span><span class="token string">'输入本地配置好等待ping的ip地址文件 地址'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 添加一个可选参数</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--tels'</span><span class="token punctuation">,</span> <span class="token string">'-t'</span><span class="token punctuation">,</span> type<span class="token operator">=</span>str<span class="token punctuation">,</span> default<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'电话号码.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> help<span class="token operator">=</span><span class="token string">'输入配置好的电话和用户名文件 地址'</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--download'</span><span class="token punctuation">,</span> <span class="token string">'-d'</span><span class="token punctuation">,</span>action<span class="token operator">=</span><span class="token string">'store_true'</span><span class="token punctuation">,</span> help<span class="token operator">=</span><span class="token string">'下载ip地址文件、发送手机号文件模板'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 解析命令行输入</span>    <span class="token comment" spellcheck="true">#args = parser.parse_args(['-i','aaaa','-t','bbbbb'])</span>    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> args<span class="token punctuation">.</span>download<span class="token punctuation">:</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'ips_template.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'tels_template.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'上联地址.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'电话号码.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>    <span class="token keyword">return</span> args</code></pre><h4 id="2-2-4-读取交换机地址池文件"><a href="#2-2-4-读取交换机地址池文件" class="headerlink" title="2.2.4 读取交换机地址池文件"></a>2.2.4 读取交换机地址池文件</h4><p>交换机地址池文件格式</p><pre><code>ip地址&lt;空格&gt;所属机构127.0.0.1 本机</code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">loadIP_txt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip_path<span class="token operator">=</span>parseArgs<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ips<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>ip_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>        lines <span class="token operator">=</span> file<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    del_key<span class="token operator">=</span><span class="token string">''</span>    all_ip<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>        all_ip<span class="token punctuation">[</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> all_ip<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token string">'9'</span> <span class="token operator">or</span> k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token string">'0'</span><span class="token punctuation">:</span>            del_key<span class="token operator">=</span>k    <span class="token keyword">del</span> all_ip<span class="token punctuation">[</span>del_key<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>all_ip<span class="token punctuation">)</span>    <span class="token keyword">return</span> all_ip</code></pre><h4 id="2-2-5-读取手机号"><a href="#2-2-5-读取手机号" class="headerlink" title="2.2.5 读取手机号"></a>2.2.5 读取手机号</h4><pre><code>手机号&lt;空格&gt;姓名138xxxxx0841 ww</code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">parse_phone_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---开始解析电话号码配置文件---"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#获取当日日期</span>    today<span class="token operator">=</span>date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>today<span class="token punctuation">)</span>    iphone_users<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {file_path} 存在"</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>            lines <span class="token operator">=</span> file<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>                iphone_users<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {file_path} 不存在"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 创建一个名为example.txt的文件</span>    <span class="token keyword">return</span> iphone_users</code></pre><h3 id="2-3-初始化所有交换机ip地址池网络状态"><a href="#2-3-初始化所有交换机ip地址池网络状态" class="headerlink" title="2.3 初始化所有交换机ip地址池网络状态"></a>2.3 初始化所有交换机ip地址池网络状态</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#------------1.获取待测试的ip地址池---------------</span>ip_pools<span class="token operator">=</span>self<span class="token punctuation">.</span>loadIP_txt<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'开始批量检测网络是否通畅'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#----------------2. 初始化ip地址状态------------</span>init_result<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">"当前时间"</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token string">"位置"</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token string">"网络状态"</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token string">"连续失败次数"</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"本日累计失败次数"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"最后在线时间"</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#初始化连续网络测试结果{'127.0.0.1': 0, '185.199.109.153': 0, '32.107.255.230': 0, '32.107.255.226': 0}</span><span class="token comment" spellcheck="true">#sendMsg={ip:init_result for ip in ip_pools.keys()}  #这种初始化导致都是最后一个ip地址的状态</span>sendMsg <span class="token operator">=</span> <span class="token punctuation">{</span>ip<span class="token punctuation">:</span> copy<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span>init_result<span class="token punctuation">)</span> <span class="token keyword">for</span> ip <span class="token keyword">in</span> ip_pools<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">#必须深拷贝</span></code></pre><h3 id="2-4-批量进行ping操作"><a href="#2-4-批量进行ping操作" class="headerlink" title="2.4 批量进行ping操作"></a>2.4 批量进行ping操作</h3><h4 id="2-4-1-ip地址单个ping操作"><a href="#2-4-1-ip地址单个ping操作" class="headerlink" title="2.4.1 ip地址单个ping操作"></a>2.4.1 ip地址单个ping操作</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">ping_ip</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>address<span class="token punctuation">,</span>sendMsg<span class="token punctuation">)</span><span class="token punctuation">:</span>    result<span class="token operator">=</span>ping<span class="token punctuation">(</span>ip<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>    sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"位置"</span><span class="token punctuation">]</span> <span class="token operator">=</span>address    <span class="token keyword">if</span> <span class="token operator">not</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"当前时间"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>str<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>    sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"当前时间"</span><span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> result <span class="token keyword">is</span> None <span class="token operator">or</span> result <span class="token keyword">is</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">=</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span><span class="token operator">=</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'网络故障'</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">3</span> <span class="token operator">and</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">10</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'网络不稳定'</span>        sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"ip地址"</span><span class="token operator">+</span>ip<span class="token operator">+</span><span class="token string">"地址"</span><span class="token operator">+</span>address<span class="token operator">+</span><span class="token string">"网络故障\n"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">4</span><span class="token punctuation">:</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'网络断网恢复成功'</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'网络正常'</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"最后在线时间"</span><span class="token punctuation">]</span><span class="token operator">=</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"ip地址"</span> <span class="token operator">+</span> ip <span class="token operator">+</span> <span class="token string">"地址"</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">"网络正常\n"</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>build_log_txt<span class="token punctuation">(</span>ip<span class="token punctuation">,</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#将当前状态字典写入日志文件中</span></code></pre><h4 id="2-4-2-多线程进行ping"><a href="#2-4-2-多线程进行ping" class="headerlink" title="2.4.2 多线程进行ping"></a>2.4.2 多线程进行ping</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 3.多线程处理ping操作</span>    threads<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> ip<span class="token punctuation">,</span>address <span class="token keyword">in</span> ip_pools<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        thread<span class="token operator">=</span>threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>ping_ip<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>address<span class="token punctuation">,</span>sendMsg<span class="token punctuation">)</span><span class="token punctuation">)</span>        thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        threads<span class="token punctuation">.</span>append<span class="token punctuation">(</span>thread<span class="token punctuation">)</span>    <span class="token keyword">for</span> thread <span class="token keyword">in</span> threads<span class="token punctuation">:</span>        thread<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="2-5-发送短信"><a href="#2-5-发送短信" class="headerlink" title="2.5 发送短信"></a>2.5 发送短信</h3><h4 id="2-5-1-发送单个ip状态短信，并写入日志文件"><a href="#2-5-1-发送单个ip状态短信，并写入日志文件" class="headerlink" title="2.5.1 发送单个ip状态短信，并写入日志文件"></a>2.5.1 发送单个ip状态短信，并写入日志文件</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sendCode</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>sendMsg<span class="token punctuation">)</span><span class="token punctuation">:</span>    url<span class="token operator">=</span><span class="token string">'http://xxxxxxx/smsCode/xxxxx'</span>    tels<span class="token operator">=</span>parseArgs<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tels       tels_lists<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_phone_file<span class="token punctuation">(</span>tels<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 获取手机号列表</span>    <span class="token keyword">for</span> tel <span class="token keyword">in</span> tels_lists<span class="token punctuation">:</span>        data<span class="token operator">=</span><span class="token punctuation">{</span>            <span class="token string">"phone"</span><span class="token punctuation">:</span>tel<span class="token punctuation">,</span>            <span class="token string">"content"</span><span class="token punctuation">:</span>sendMsg        <span class="token punctuation">}</span>        requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'Content-Type'</span><span class="token punctuation">:</span><span class="token string">'application/json'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"发送成功"</span><span class="token punctuation">)</span>        today <span class="token operator">=</span> date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>        today_log_name <span class="token operator">=</span> today <span class="token operator">+</span> <span class="token string">'_log.txt'</span>        <span class="token comment" spellcheck="true">#写入日志文件</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a+'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>            single_log<span class="token operator">=</span><span class="token string">'----开始发送短信---'</span>            single_log<span class="token operator">=</span>single_log<span class="token operator">+</span>sendMsg            file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>single_log<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span></code></pre><h4 id="2-5-2-遍历ip地址池，满足条件的ip地址向用户发送短信"><a href="#2-5-2-遍历ip地址池，满足条件的ip地址向用户发送短信" class="headerlink" title="2.5.2 遍历ip地址池，满足条件的ip地址向用户发送短信"></a>2.5.2 遍历ip地址池，满足条件的ip地址向用户发送短信</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#4.发送通知短信（断网、断网恢复、网络不稳定）</span>    <span class="token keyword">for</span> ip<span class="token punctuation">,</span> address <span class="token keyword">in</span> ip_pools<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  <span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">4</span> <span class="token operator">and</span>  sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">or</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'网络断网恢复成功'</span><span class="token operator">or</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'网络不稳定'</span> <span class="token operator">or</span> <span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">240</span> <span class="token operator">and</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">%</span><span class="token number">240</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">%</span><span class="token number">240</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">)</span>            sendsingleMsg <span class="token operator">=</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span>            single_log <span class="token operator">=</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"通知\n当前时间："</span> <span class="token operator">+</span> sendsingleMsg<span class="token punctuation">[</span><span class="token string">'当前时间'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\n当前ip地址:"</span> <span class="token operator">+</span> ip <span class="token operator">+</span> <span class="token string">"\n位置："</span> <span class="token operator">+</span>   sendsingleMsg<span class="token punctuation">[</span><span class="token string">'位置'</span><span class="token punctuation">]</span>  <span class="token operator">+</span> <span class="token string">"\n网络状态："</span> <span class="token operator">+</span> sendsingleMsg<span class="token punctuation">[</span><span class="token string">'网络状态'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'\n连续失败次数：'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>                sendsingleMsg<span class="token punctuation">[</span><span class="token string">'连续失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n本日累计失败次数："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>sendsingleMsg<span class="token punctuation">[</span><span class="token string">'本日累计失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">+</span> <span class="token string">"\n最后在线时间："</span> <span class="token operator">+</span> sendsingleMsg<span class="token punctuation">[</span><span class="token string">'最后在线时间'</span><span class="token punctuation">]</span>            self<span class="token punctuation">.</span>sendCode<span class="token punctuation">(</span>ip<span class="token punctuation">,</span>single_log<span class="token punctuation">)</span></code></pre><h4 id="2-5-3-休眠40s后进入下次批量处理"><a href="#2-5-3-休眠40s后进入下次批量处理" class="headerlink" title="2.5.3 休眠40s后进入下次批量处理"></a>2.5.3 休眠40s后进入下次批量处理</h4><pre><code>#4.休眠40s后进入下次批量处理time.sleep(40)</code></pre><h3 id="2-6-生成、写入并定时清理日志文件"><a href="#2-6-生成、写入并定时清理日志文件" class="headerlink" title="2.6 生成、写入并定时清理日志文件"></a>2.6 生成、写入并定时清理日志文件</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">build_log_txt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>log_content<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---开始检测本日日志是否存在---"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#获取当日日期</span>    today<span class="token operator">=</span>date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>today<span class="token punctuation">)</span>    ten_day<span class="token operator">=</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>ten_day<span class="token punctuation">)</span>    ten_day__log_name<span class="token operator">=</span>ten_day<span class="token operator">+</span> <span class="token string">'_log.txt'</span>    today_log_name<span class="token operator">=</span>today <span class="token operator">+</span> <span class="token string">'_log.txt'</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {today_log_name} 存在"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {today_log_name} 不存在"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 创建一个名为example.txt的文件</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a+'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>            file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-----创建本日日志文件成功----\n"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>ten_day__log_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"10天前日志文件  {ten_day__log_name} 存在,开始删除。"</span><span class="token punctuation">)</span>        os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>ten_day__log_name<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"10天前日志文件 {ten_day__log_name} 不存在"</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token punctuation">(</span>open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a+'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">)</span><span class="token punctuation">:</span>        single_log<span class="token operator">=</span><span class="token string">"当前时间"</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'当前时间'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">",当前ip地址:"</span><span class="token operator">+</span>ip<span class="token operator">+</span><span class="token string">"，位置："</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'位置'</span><span class="token punctuation">]</span> \                   <span class="token operator">+</span><span class="token string">",网络状态："</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'网络状态'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">',连续失败次数：'</span><span class="token operator">+</span>str<span class="token punctuation">(</span>log_content<span class="token punctuation">[</span><span class="token string">'连续失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\                    <span class="token operator">+</span><span class="token string">",本日累计失败次数："</span><span class="token operator">+</span>str<span class="token punctuation">(</span>log_content<span class="token punctuation">[</span><span class="token string">'本日累计失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\                    <span class="token operator">+</span><span class="token string">",最后在线时间："</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'最后在线时间'</span><span class="token punctuation">]</span>        file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>single_log<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span></code></pre><h2 id="三、-全部代码"><a href="#三、-全部代码" class="headerlink" title="三、 全部代码"></a>三、 全部代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> argparse<span class="token keyword">import</span> copy<span class="token keyword">import</span> json<span class="token keyword">import</span> optparse<span class="token keyword">import</span> os<span class="token keyword">import</span> shutil<span class="token keyword">import</span> sys<span class="token keyword">import</span> threading<span class="token keyword">import</span> time<span class="token keyword">from</span> concurrent<span class="token punctuation">.</span>futures <span class="token keyword">import</span> ThreadPoolExecutor<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date<span class="token punctuation">,</span> datetime<span class="token punctuation">,</span> timedelta<span class="token keyword">import</span> requests<span class="token keyword">from</span> ping3 <span class="token keyword">import</span> ping<span class="token comment" spellcheck="true">####模块</span><span class="token comment" spellcheck="true">### 日志模块</span>    <span class="token comment" spellcheck="true">##格式</span>    <span class="token comment" spellcheck="true">### 当前日期时间{}，ip地址{}，位置{}，网络状态{}，连续失败次数{}，本日失败次数{}，最后在线时间{}</span>    <span class="token comment" spellcheck="true">###  pi</span><span class="token comment" spellcheck="true">###文件读取写入模块</span>  <span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">### 短信发送模块</span>   <span class="token comment" spellcheck="true">## 格式： 当前时间：{}，ip地址：{}，位置：{} 已经断网{时常}。</span><span class="token comment" spellcheck="true">### 多线程模块</span><span class="token comment" spellcheck="true">###   ping操作耗费时间，单线程运行很慢，为每个ip地址的ping操作分配一个线程</span>    <span class="token comment" spellcheck="true">#  Q&amp;A   :多线程进行写入日志文件，线程不安全，出现多个线程同时打开同一资源，访问拒绝错误</span>    <span class="token comment" spellcheck="true">#         :多线程进行cmd窗口打印，输出顺序错乱</span><span class="token comment" spellcheck="true">###</span><span class="token comment" spellcheck="true">#cmd单独配置ip地址</span><span class="token comment" spellcheck="true"># 获取当前路径父路径（所在文件夹）</span>BASE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#获取打包后exe文件路径（所在文件夹）</span>BASE_EXE_DIR <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>executable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#获取cmd</span>user_perfer<span class="token operator">=</span>sys<span class="token punctuation">.</span>argv<span class="token keyword">def</span> <span class="token function">parseArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 创建一个ArgumentParser对象</span>    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">'这是一个命令行运行bat_ping程序的说明'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 添加一个位置参数</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--ips'</span><span class="token punctuation">,</span> <span class="token string">'-i'</span><span class="token punctuation">,</span>type<span class="token operator">=</span>str<span class="token punctuation">,</span> default<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'上联地址.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>help<span class="token operator">=</span><span class="token string">'输入本地配置好等待ping的ip地址文件 地址'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 添加一个可选参数</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--tels'</span><span class="token punctuation">,</span> <span class="token string">'-t'</span><span class="token punctuation">,</span> type<span class="token operator">=</span>str<span class="token punctuation">,</span> default<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'电话号码.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> help<span class="token operator">=</span><span class="token string">'输入配置好的电话和用户名文件 地址'</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--download'</span><span class="token punctuation">,</span> <span class="token string">'-d'</span><span class="token punctuation">,</span>action<span class="token operator">=</span><span class="token string">'store_true'</span><span class="token punctuation">,</span> help<span class="token operator">=</span><span class="token string">'下载ip地址文件、发送手机号文件模板'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 解析命令行输入</span>    <span class="token comment" spellcheck="true">#args = parser.parse_args(['-i','aaaa','-t','bbbbb'])</span>    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> args<span class="token punctuation">.</span>download<span class="token punctuation">:</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'ips_template.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'tels_template.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">'上联地址.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'电话号码.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BASE_EXE_DIR<span class="token punctuation">)</span>    <span class="token keyword">return</span> argsparseArgs<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">batch_ping</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 读取ip地址配置文件，生成字典，格式{ip地址：位置}</span>        <span class="token comment" spellcheck="true"># 去除不正确的ip地址</span>    <span class="token keyword">def</span> <span class="token function">logger</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>build_log_txt<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">'log'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            ret<span class="token operator">=</span>func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>            <span class="token keyword">return</span> ret        <span class="token keyword">return</span> inner    <span class="token keyword">def</span> <span class="token function">loadIP_txt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip_path<span class="token operator">=</span>parseArgs<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ips<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>ip_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>            lines <span class="token operator">=</span> file<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        del_key<span class="token operator">=</span><span class="token string">''</span>        all_ip<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># print(line.split(' '))</span>            <span class="token comment" spellcheck="true"># ip_pools=line.split(' ')[0]</span>            <span class="token comment" spellcheck="true"># actress_pools=line.split(' ')[1]</span>            <span class="token comment" spellcheck="true"># print(ip_pools)</span>            <span class="token comment" spellcheck="true"># print(actress_pools)</span>            all_ip<span class="token punctuation">[</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> all_ip<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token string">'9'</span> <span class="token operator">or</span> k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token string">'0'</span><span class="token punctuation">:</span>                del_key<span class="token operator">=</span>k        <span class="token keyword">del</span> all_ip<span class="token punctuation">[</span>del_key<span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>all_ip<span class="token punctuation">)</span>        <span class="token keyword">return</span> all_ip    <span class="token keyword">def</span> <span class="token function">build_log_txt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>log_content<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---开始检测本日日志是否存在---"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#获取当日日期</span>        today<span class="token operator">=</span>date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>today<span class="token punctuation">)</span>        ten_day<span class="token operator">=</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>ten_day<span class="token punctuation">)</span>        ten_day__log_name<span class="token operator">=</span>ten_day<span class="token operator">+</span> <span class="token string">'_log.txt'</span>        today_log_name<span class="token operator">=</span>today <span class="token operator">+</span> <span class="token string">'_log.txt'</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {today_log_name} 存在"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {today_log_name} 不存在"</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 创建一个名为example.txt的文件</span>            <span class="token keyword">with</span> open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a+'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>                file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-----创建本日日志文件成功----\n"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>ten_day__log_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"10天前日志文件  {ten_day__log_name} 存在,开始删除。"</span><span class="token punctuation">)</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>ten_day__log_name<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"10天前日志文件 {ten_day__log_name} 不存在"</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> <span class="token punctuation">(</span>open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a+'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">)</span><span class="token punctuation">:</span>            single_log<span class="token operator">=</span><span class="token string">"当前时间"</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'当前时间'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">",当前ip地址:"</span><span class="token operator">+</span>ip<span class="token operator">+</span><span class="token string">"，位置："</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'位置'</span><span class="token punctuation">]</span> \                       <span class="token operator">+</span><span class="token string">",网络状态："</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'网络状态'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">',连续失败次数：'</span><span class="token operator">+</span>str<span class="token punctuation">(</span>log_content<span class="token punctuation">[</span><span class="token string">'连续失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\                        <span class="token operator">+</span><span class="token string">",本日累计失败次数："</span><span class="token operator">+</span>str<span class="token punctuation">(</span>log_content<span class="token punctuation">[</span><span class="token string">'本日累计失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\                        <span class="token operator">+</span><span class="token string">",最后在线时间："</span><span class="token operator">+</span>log_content<span class="token punctuation">[</span><span class="token string">'最后在线时间'</span><span class="token punctuation">]</span>            file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>single_log<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_phone_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---开始解析电话号码配置文件---"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#获取当日日期</span>        today<span class="token operator">=</span>date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>today<span class="token punctuation">)</span>        iphone_users<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {file_path} 存在"</span><span class="token punctuation">)</span>            <span class="token keyword">with</span> open<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>                lines <span class="token operator">=</span> file<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>                    iphone_users<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"文件 {file_path} 不存在"</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 创建一个名为example.txt的文件</span>        <span class="token keyword">return</span> iphone_users    <span class="token keyword">def</span> <span class="token function">ping_ip</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>address<span class="token punctuation">,</span>sendMsg<span class="token punctuation">)</span><span class="token punctuation">:</span>        result<span class="token operator">=</span>ping<span class="token punctuation">(</span>ip<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"位置"</span><span class="token punctuation">]</span> <span class="token operator">=</span>address        <span class="token keyword">if</span> <span class="token operator">not</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"当前时间"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>str<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第二天了"</span><span class="token punctuation">)</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>        sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"当前时间"</span><span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> result <span class="token keyword">is</span> None <span class="token operator">or</span> result <span class="token keyword">is</span> <span class="token boolean">False</span><span class="token punctuation">:</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">=</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span><span class="token operator">=</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'网络故障'</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">3</span> <span class="token operator">and</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"本日累计失败次数"</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">10</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>                sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'网络不稳定'</span>            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"ip地址"</span><span class="token operator">+</span>ip<span class="token operator">+</span><span class="token string">"地址"</span><span class="token operator">+</span>address<span class="token operator">+</span><span class="token string">"网络故障\n"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">4</span><span class="token punctuation">:</span>                sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'网络断网恢复成功'</span>                sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'网络正常'</span>                sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>            sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"最后在线时间"</span><span class="token punctuation">]</span><span class="token operator">=</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d %H:%M:%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"ip地址"</span> <span class="token operator">+</span> ip <span class="token operator">+</span> <span class="token string">"地址"</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">"网络正常\n"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>build_log_txt<span class="token punctuation">(</span>ip<span class="token punctuation">,</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">sendCode</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>ip<span class="token punctuation">,</span>sendMsg<span class="token punctuation">)</span><span class="token punctuation">:</span>        url<span class="token operator">=</span><span class="token string">'http://xxxxxxxxxx/xxxxxx/xxxxxxx'</span>        tels<span class="token operator">=</span>parseArgs<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tels        tels_lists<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_phone_file<span class="token punctuation">(</span>tels<span class="token punctuation">)</span>        <span class="token keyword">for</span> tel <span class="token keyword">in</span> tels_lists<span class="token punctuation">:</span>            data<span class="token operator">=</span><span class="token punctuation">{</span>                <span class="token string">"phone"</span><span class="token punctuation">:</span>tel<span class="token punctuation">,</span>                <span class="token string">"content"</span><span class="token punctuation">:</span>sendMsg            <span class="token punctuation">}</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'Content-Type'</span><span class="token punctuation">:</span><span class="token string">'application/json'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"发送成功"</span><span class="token punctuation">)</span>            today <span class="token operator">=</span> date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y%m%d'</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>today<span class="token punctuation">)</span>            today_log_name <span class="token operator">=</span> today <span class="token operator">+</span> <span class="token string">'_log.txt'</span>            <span class="token keyword">with</span> open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_EXE_DIR<span class="token punctuation">,</span>today_log_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a+'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>                single_log<span class="token operator">=</span><span class="token string">'----开始发送短信---'</span>                single_log<span class="token operator">=</span>single_log<span class="token operator">+</span>sendMsg                file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>single_log<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">batch_ping</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">#------------1.获取待测试的ip地址池---------------</span>        ip_pools<span class="token operator">=</span>self<span class="token punctuation">.</span>loadIP_txt<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'开始批量检测网络是否通畅'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#----------------2. 初始化ip地址状态------------</span>        init_result<span class="token operator">=</span><span class="token punctuation">{</span>            <span class="token string">"当前时间"</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>            <span class="token string">"位置"</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>            <span class="token string">"网络状态"</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>            <span class="token string">"连续失败次数"</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"本日累计失败次数"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token string">"最后在线时间"</span><span class="token punctuation">:</span><span class="token string">''</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#初始化连续网络测试结果{'127.0.0.1': { "当前时间":'',"位置":'',"网络状态":'',"连续失败次数":0, "本日累计失败次数": 0,"最后在线时间":''}, '185.199.109.153':{ "当前时间":'',"位置":'',"网络状态":'',"连续失败次数":0, "本日累计失败次数": 0,"最后在线时间":''}}</span>        <span class="token comment" spellcheck="true">#sendMsg={ip:init_result for ip in ip_pools.keys()}  #这种初始化导致都是最后一个ip地址的状态</span>        sendMsg <span class="token operator">=</span> <span class="token punctuation">{</span>ip<span class="token punctuation">:</span> copy<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span>init_result<span class="token punctuation">)</span> <span class="token keyword">for</span> ip <span class="token keyword">in</span> ip_pools<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token comment" spellcheck="true"># for ip,address in ip_pools.items():</span>        <span class="token comment" spellcheck="true">#     result_fail[ip]=0</span>        <span class="token comment" spellcheck="true">#------------</span>        <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 3.多线程处理ping操作</span>            threads<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">for</span> ip<span class="token punctuation">,</span>address <span class="token keyword">in</span> ip_pools<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                thread<span class="token operator">=</span>threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>ping_ip<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>address<span class="token punctuation">,</span>sendMsg<span class="token punctuation">)</span><span class="token punctuation">)</span>                thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>                threads<span class="token punctuation">.</span>append<span class="token punctuation">(</span>thread<span class="token punctuation">)</span>            <span class="token keyword">for</span> thread <span class="token keyword">in</span> threads<span class="token punctuation">:</span>                thread<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">#result=ping(ip)</span>            <span class="token comment" spellcheck="true">#4.发送通知短信（断网、断网恢复、网络不稳定）</span>            <span class="token keyword">for</span> ip<span class="token punctuation">,</span> address <span class="token keyword">in</span> ip_pools<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span>  <span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">4</span> <span class="token operator">and</span>  sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">or</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'网络断网恢复成功'</span><span class="token operator">or</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'网络不稳定'</span> <span class="token operator">or</span> <span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">240</span> <span class="token operator">and</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">%</span><span class="token number">240</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"连续失败次数"</span><span class="token punctuation">]</span><span class="token operator">%</span><span class="token number">240</span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">)</span>                    sendsingleMsg <span class="token operator">=</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span>                    single_log <span class="token operator">=</span> sendMsg<span class="token punctuation">[</span>ip<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"网络状态"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"通知\n当前时间："</span> <span class="token operator">+</span> sendsingleMsg<span class="token punctuation">[</span><span class="token string">'当前时间'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\n当前ip地址:"</span> <span class="token operator">+</span> ip <span class="token operator">+</span> <span class="token string">"\n位置："</span> <span class="token operator">+</span> \                                 sendsingleMsg<span class="token punctuation">[</span><span class="token string">'位置'</span><span class="token punctuation">]</span> \                                 <span class="token operator">+</span> <span class="token string">"\n网络状态："</span> <span class="token operator">+</span> sendsingleMsg<span class="token punctuation">[</span><span class="token string">'网络状态'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'\n连续失败次数：'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>                        sendsingleMsg<span class="token punctuation">[</span><span class="token string">'连续失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n本日累计失败次数："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>sendsingleMsg<span class="token punctuation">[</span><span class="token string">'本日累计失败次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> \                                 <span class="token operator">+</span> <span class="token string">"\n最后在线时间："</span> <span class="token operator">+</span> sendsingleMsg<span class="token punctuation">[</span><span class="token string">'最后在线时间'</span><span class="token punctuation">]</span>                    self<span class="token punctuation">.</span>sendCode<span class="token punctuation">(</span>ip<span class="token punctuation">,</span>single_log<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>sendMsg<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#4.休眠40s后进入下次批量处理</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span>            <span class="token triple-quoted-string string">'''            Q&amp;A:待优化的点                多线程导致写入日志文件线程不安全，导致print乱序 ---------使用第三方日志包                日志分类：失败日志、网络恢复日志、发送短信日志                加入cmd加入参数运行（如配置ip地址文件、发送手机号文件配置等）----argparse                加入ip地址池文件里面ip地址的校验、手机号码校验。 ------正则表达式校验                异常处理模块加入               --------            延伸思考：                spec文件打包详解            '''</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    bat<span class="token operator">=</span>batch_ping<span class="token punctuation">(</span><span class="token punctuation">)</span>    bat<span class="token punctuation">.</span>batch_ping<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="四、打包"><a href="#四、打包" class="headerlink" title="四、打包"></a>四、打包</h2><h3 id="4-1-前置说明"><a href="#4-1-前置说明" class="headerlink" title="4.1  前置说明"></a>4.1  前置说明</h3><h4 id="4-1-1文件列表"><a href="#4-1-1文件列表" class="headerlink" title="4.1.1文件列表"></a>4.1.1文件列表</h4><ul><li><input disabled type="checkbox"> batch_pingsv3.py</li><li><input disabled type="checkbox"> 上联地址.txt</li><li><input disabled type="checkbox"> 电话号码.txt</li></ul><h4 id="4-1-2-安装pyinstaller"><a href="#4-1-2-安装pyinstaller" class="headerlink" title="4.1.2 安装pyinstaller"></a>4.1.2 安装pyinstaller</h4><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> pyinstaller</code></pre><h3 id="4-2-打包生成-spec文件"><a href="#4-2-打包生成-spec文件" class="headerlink" title="4.2 打包生成.spec文件"></a>4.2 打包生成.spec文件</h3><pre class=" language-bash"><code class="language-bash">pyinstaller -F batch_pingsv3.py </code></pre><p>说明：1.生成batch_pingsv3.spec文件</p><p>2.pyinstaller常用打包参数</p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>-D, –onedir</td><td>打包成一个文件夹</td></tr><tr><td>-F, –onefile</td><td>打包成一个可执行文件(exe)</td></tr></tbody></table><h3 id="4-3-使用-spec文件打包"><a href="#4-3-使用-spec文件打包" class="headerlink" title="4.3 使用.spec文件打包"></a>4.3 使用.spec文件打包</h3><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> Analysis<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token string">'batch_pingsv3.py'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    pathex<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    binaries<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    datas<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'上联地址.txt'</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'电话号码.txt'</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'ips_template.txt'</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'tels_template.txt'</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    hiddenimports<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    hookspath<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    hooksconfig<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    runtime_hooks<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    excludes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    noarchive<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    optimize<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span>pyz <span class="token operator">=</span> PYZ<span class="token punctuation">(</span>a<span class="token punctuation">.</span>pure<span class="token punctuation">)</span>exe <span class="token operator">=</span> EXE<span class="token punctuation">(</span>    pyz<span class="token punctuation">,</span>    a<span class="token punctuation">.</span>scripts<span class="token punctuation">,</span>    a<span class="token punctuation">.</span>binaries<span class="token punctuation">,</span>    a<span class="token punctuation">.</span>datas<span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    name<span class="token operator">=</span><span class="token string">'batch_pingsv3'</span><span class="token punctuation">,</span>    debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    bootloader_ignore_signals<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    strip<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    upx<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    console<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    upx_exclude<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    runtime_tmpdir<span class="token operator">=</span>None<span class="token punctuation">,</span>    disable_windowed_traceback<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    argv_emulation<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>    target_arch<span class="token operator">=</span>None<span class="token punctuation">,</span>    codesign_identity<span class="token operator">=</span>None<span class="token punctuation">,</span>    entitlements_file<span class="token operator">=</span>None<span class="token punctuation">,</span>    icon<span class="token operator">=</span><span class="token string">'C:\\Users\\ww\\Desktop\\ping\\pythonProject2\\PING.ico'</span><span class="token punctuation">)</span></code></pre><p>主要修改说明：</p><p>修改<code>datas=[(&#39;上联地址.txt&#39;,&#39;.&#39;),(&#39;电话号码.txt&#39;,&#39;.&#39;),(&#39;ips_template.txt&#39;,&#39;.&#39;),(&#39;tels_template.txt&#39;,&#39;.&#39;)],</code></p><p>注意：存放位置为 ’ . ’ 时，表示为程序运行目录（windows：C:\Users\Administrator\AppData\Local\Temp_MEI190322，单文件模式运行时会自动解压到该目录) </p><p><code>console=True,</code>    cmd窗口是否显示</p><p> <code>runtime_tmpdir=None,</code>            单文件模式</p><p><code>icon=&#39;C:\\Users\\ww\\Desktop\\ping\\pythonProject2\\PING.ico&#39;</code>        打包exe文件的图标地址</p><p><a href="https://www.cnblogs.com/haujet/p/PyInstaller-Perfect-Build.html" target="_blank" rel="noopener">PyInstaller 完美打包 Python 脚本，输出结构清晰、便于二次编辑的打包程序 - 淳帅二代 - 博客园 (cnblogs.com)</a> </p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 运维 </tag>
            
            <tag> ping </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客编写常用命令</title>
      <link href="/2024/07/21/hexo-chang-yong-ming-ling/"/>
      <url>/2024/07/21/hexo-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="一、hexo安装与部署"><a href="#一、hexo安装与部署" class="headerlink" title="一、hexo安装与部署"></a>一、hexo安装与部署</h1><h2 id="1-1环境准备"><a href="#1-1环境准备" class="headerlink" title="1.1环境准备"></a>1.1环境准备</h2><p>官网：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>         3.9.0         hexo-cli  2.0.0</p><p>安装 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a>      8.17.0    </p><p>安装<a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>        </p><h2 id="1-2-本地博客安装步骤"><a href="#1-2-本地博客安装步骤" class="headerlink" title="1.2 本地博客安装步骤"></a>1.2 本地博客安装步骤</h2><h3 id="1-2-1-博客初始化"><a href="#1-2-1-博客初始化" class="headerlink" title="1.2.1 博客初始化"></a>1.2.1 博客初始化</h3><pre class=" language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g</code></pre><p>注：全局安装hexo脚手架，注意hexo脚手架与nodejs的兼容性问题</p><pre class=" language-bash"><code class="language-bash">$ hexo init <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">npm</span> <span class="token function">install</span></code></pre><h3 id="1-2-2-博客主题下载与应用"><a href="#1-2-2-博客主题下载与应用" class="headerlink" title="1.2.2 博客主题下载与应用"></a>1.2.2 博客主题下载与应用</h3><p>hexo 主题网站<a href="https://www.hexothemes.com/theme/" target="_blank" rel="noopener">Latest Hexo Themes | Hexo Themes</a> </p><p>使用git clone下载github/gitee主题</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> clone https://gitee.com/immyw/hexo-theme-butterfly.git</code></pre><p>下载至<code>&lt;folder&gt;</code>/themes</p><p>打开<code>&lt;folder&gt;</code>下hexo的配置文件  _config.yml 文件，修改：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>butterfly</code></pre><h4 id="1-2-3-本地执行"><a href="#1-2-3-本地执行" class="headerlink" title="1.2.3 本地执行"></a>1.2.3 本地执行</h4><pre class=" language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;</span> hexo generate <span class="token operator">&amp;</span> hexo server -p 5000 </code></pre><h3 id="1-3-本地blog推送至github"><a href="#1-3-本地blog推送至github" class="headerlink" title="1.3 本地blog推送至github"></a>1.3 本地blog推送至github</h3><h4 id="1-3-1-lt-folder-gt-下-config-yml-文件配置"><a href="#1-3-1-lt-folder-gt-下-config-yml-文件配置" class="headerlink" title="1.3.1 &lt;folder&gt;下  _config.yml 文件配置"></a>1.3.1 <code>&lt;folder&gt;</code>下  _config.yml 文件配置</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> &lt;你的Github仓库的SSH地址<span class="token punctuation">></span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><h4 id="1-3-2-Github仓库创建并且配置SSH-keys"><a href="#1-3-2-Github仓库创建并且配置SSH-keys" class="headerlink" title="1.3.2 Github仓库创建并且配置SSH keys"></a>1.3.2 Github仓库创建并且配置SSH keys</h4><p><a href="https://tech.yemengstar.com/hexo-tutorial-deploy-githubpages-beginner/" target="_blank" rel="noopener">HEXO系列教程 | 使用GitHub部署静态博客HEXO | 小白向教程 – 夜梦星尘の折腾日记 (yemengstar.com)</a> </p><p><a href="https://blog.csdn.net/2202_75780138/article/details/132112279" target="_blank" rel="noopener">https://blog.csdn.net/2202_75780138/article/details/132112279</a></p><h4 id="1-3-3-执行远程部署命令"><a href="#1-3-3-执行远程部署命令" class="headerlink" title="1.3.3 执行远程部署命令"></a>1.3.3 执行远程部署命令</h4><p>cd至 <code>&lt;folder&gt;</code>下</p><pre class=" language-bash"><code class="language-bash">hexo c <span class="token operator">&amp;</span> hexo g <span class="token operator">&amp;</span> hexo d</code></pre><h3 id="1-4-本地博客机器迁移"><a href="#1-4-本地博客机器迁移" class="headerlink" title="1.4 本地博客机器迁移"></a>1.4 本地博客机器迁移</h3><p>1.将便携版 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a>  、<a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>、blog文件夹复制，配置nodejs环境变量</p><p>注：注意版本冲突问题（已经搭建环境： Node.js（node-v8.17.0-win-x64），hexo-cli(v2.0.0)，hexo(3.9.0)</p><p>2.重新生成SSH key</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"你的 GitHub 用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"你的 GitHub 邮箱"</span>ssh-keygen -t rsa -C <span class="token string">"你的 GitHub 邮箱"</span></code></pre><p>例如：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"wwblog"</span><span class="token function">git</span> config --global user.email <span class="token string">"3349208308@qq.com"</span>ssh-keygen -t rsa -C <span class="token string">"3349208308@qq.com"</span></code></pre><p>然后我们进入 <code>C:\Users\ 用户名 \.ssh</code> 目录 ,我们<strong>用记事本</strong>打开<code>id_rsa.pub</code>并<strong>复制里面的内容</strong>,在 GitHub 中添加 SSH 密钥。</p><h2 id="二、博客编写"><a href="#二、博客编写" class="headerlink" title="二、博客编写"></a>二、博客编写</h2><h3 id="2-1-新文章"><a href="#2-1-新文章" class="headerlink" title="2.1 新文章"></a>2.1 新文章</h3><pre class=" language-bash"><code class="language-bash"> hexo new  <span class="token string">"文章名字"</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习之Python编程规范</title>
      <link href="/2019/10/25/python-xue-xi-zhi-python-bian-cheng-gui-fan/"/>
      <url>/2019/10/25/python-xue-xi-zhi-python-bian-cheng-gui-fan/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>为什么Python编程需要规范？</p><p>规范的要求有那几个方面？</p><p>不规范的后果有哪些？</p><p>书写规范的标准</p><h1 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h1><p>1.标识符命名规则</p><p>以字母、下划线、数字组成，且不能以数字开头</p><p>不能是关键字与保留字</p><pre><code>注：python3标识符可以存在汉字，不推荐标识符包括 模块名(.py文件名)、变量名、类名、函数名、包名</code></pre><p>不仅需要符合标识符命名规则、</p><p><img src="/2019/10/25/python-xue-xi-zhi-python-bian-cheng-gui-fan/Python%E5%AD%A6%E4%B9%A0%E4%B9%8BPython%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83%5CPython%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.webp.jpg" alt="Python命名规范.webp"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>代码规范文档<br>原文档<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">https://www.python.org/dev/peps/pep-0008/</a><br>谷歌中文文档<a href="http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/" target="_blank" rel="noopener">http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/</a></p><p>博客：<a href="https://www.zrahh.com/category/biji/7/" target="_blank" rel="noopener">https://www.zrahh.com/category/biji/7/</a></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
          <category> Python命名规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习之模块与包的导入</title>
      <link href="/2019/10/25/python-xue-xi-zhi-mo-kuai-yu-bao-de-dao-ru/"/>
      <url>/2019/10/25/python-xue-xi-zhi-mo-kuai-yu-bao-de-dao-ru/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>为什么存在导入语句？</p><p>python能够使用import语句导入哪些东西？</p><p>导入时出现<code>ModuleNotFoundError: No module named &#39;xxx&#39;</code>错误的原因，导入的模块的路径查找顺序？</p><p>导入语句的几种形式及注意点</p><p>sys模块与导入路径关系</p><p><code>__init__.py文件的作用</code></p><p><code>if __name__==&#39;__main__&#39;:</code>的使用</p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><p>包、模块的概念</p><h2 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h2><p>导入语句格式及注意点</p><p>推荐的导入方式</p><h1 id="1-导入语句的必要性"><a href="#1-导入语句的必要性" class="headerlink" title="1. 导入语句的必要性"></a>1. 导入语句的必要性</h1><p>模块复用——-减少代码冗余、提高开发效率</p><h1 id="2-导入的对象"><a href="#2-导入的对象" class="headerlink" title="2. 导入的对象"></a>2. 导入的对象</h1><ul><li>模块文件（.py文件）<ul><li>导入整个文件</li><li>导入变量</li><li>导入函数</li><li>导入类</li></ul></li><li>C或C++扩展（已编译为共享库或DLL文件）</li><li>包（包含多个模块，一定包含<code>__init__.py</code>文件）</li><li>内建模块（使用C编写并已链接到Python解释器中）</li></ul><h1 id="3-模块的搜索路径"><a href="#3-模块的搜索路径" class="headerlink" title="3. 模块的搜索路径"></a>3. 模块的搜索路径</h1><p>出现<code>ModuleNotFoundError: No module named &#39;xxx&#39;</code>问题一定是因为在<code>sys.path</code>返回的所有路径中搜索不到模块的名字</p><p><code>sys.path</code>指定了模块的搜索路径的字符串列表。sys模块包含了与python解释器和它的环境有关的函数, 里面有个 sys.path属性。它是一个list.默然情况下python导入文件或者模块的话，他会先在<code>sys.path</code>里找模块的路径。如果没有的话,程序就会报错。</p><p>通过<code>sys.path</code>指定了模块的搜索路径的字符串列表。</p><p><code>sys.path.append()</code>方法添加模块的搜索路径，<code>sys.path</code>作用域只是当前进程，进程结束后就失效了。</p><p>例：<code>sys.path.append(&#39;&#39;)</code>将当前路径加入到模块的搜索路径</p><h3 id="3-1-模块的搜索路径的组成"><a href="#3-1-模块的搜索路径的组成" class="headerlink" title="3.1 模块的搜索路径的组成"></a>3.1 模块的搜索路径的组成</h3><p>Python搜索模块的路径是由四部分构成的：程序的主目录、PATHONPATH目录、标准链接库目录和.pth文件的目录，这四部分的路径都存储在sys.path 列表中。</p><p><strong>1，程序的主目录</strong></p><p>主目录是指包含程序的顶层脚本的目录，Python首先会到主目录中搜索模块。</p><p>因为主目录总是第一个被搜索，如果模块完全处于主目录中，所有的导入都会自动完成，而不需要单独配置路径。</p><p><strong>2，PATHONPATH目录</strong></p><p>PATHONPATH目录是指PATHONPATH环境变量中配置的目录，是第二个被搜索的目录，Python会从左到右搜索PATHONPATH环境变量中设置的所有目录。</p><p><strong>3，标准链接库目录</strong></p><p>标准链接库目录是Python按照标准模块的目录，是在安装Python时自动创建的目录，通常不需要添加到PYTHONPATH目录中。</p><p><strong>4，路径文件（.pth文件）</strong></p><p>在模块搜索目录中，创建路径文件，后缀名为.pth，该文件每一行都是一个有效的目录。Python会读取路径文件中的内容，每行都作为一个有效的目录，加载到模块搜索路径列表中。简而言之，当路径文件存放到搜索路径中时，其作用和PYT)HONPATH环境变量的作用相同。</p><p>如果运行在Windows和Python3.0中，如果Python安装目录的顶层是C:\Python30，那么可以把自定义的路径文件 mypath.pth 放到该目录中。</p><p>也可以放到标准库所在位置的sitepackages子目录中（C:\Python30\Lib\sitepackages），来扩展模块的搜搜路径。</p><h3 id="3-2-设置模块的搜索路径"><a href="#3-2-设置模块的搜索路径" class="headerlink" title="3.2 设置模块的搜索路径"></a>3.2 设置模块的搜索路径</h3><p>上述四种模块搜索路径，能够配置的选项只有PYTHONPATH环境变量和路径文件。</p><ul><li>例如，在Windows平台上，创建PYTHONPATH环境变量，设置变量的值，两个目录使用分号隔开：</li></ul><pre><code>C:\pycode\utilities;D:\pycode\package1</code></pre><ul><li>也可以创建一个名为 C:\Python30\pydirs.pth的文本文件，其内容如下所示：</li></ul><pre><code>C:\pycode\utilitiesD:\pycode\package1</code></pre><ul><li><code>sys.path.append(absolute_or_relative_path_string)</code>将当前路径加入到模块的搜索路径，一般在代码编写的最前面———————————————————-<strong>推荐</strong></li></ul><h2 id="init-py的主要作用"><a href="#init-py的主要作用" class="headerlink" title="__init__.py的主要作用"></a><code>__init__.py</code>的主要作用</h2><ol><li><p>Python中package的标识，不能删除</p></li><li><p>定义<code>__all__</code>用来模糊导入</p></li><li><p>编写Python代码(不建议在<code>__init__</code>中写python模块，可以在包中在创建另外的模块来写，尽量保证<code>__init__.py</code>简单）</p></li></ol><p><code>__init__.py</code> 文件的作用是将文件夹变为一个Python模块,Python 中的每个模块的包中，都有<code>__init__.py</code> 文件。</p><p>通常<code>__init__.py</code> 文件为空，但是我们还可以为它增加其他的功能。我们在导入一个包时，实际上是导入了它的<code>__init__.py</code>文件。这样我们可以在<code>__init__.py</code>文件中批量导入我们所需要的模块，而不再需要一个一个的导入。</p><h1 id="4-导入语句"><a href="#4-导入语句" class="headerlink" title="4. 导入语句"></a>4. 导入语句</h1><h2 id="4-1-导入模块"><a href="#4-1-导入模块" class="headerlink" title="4.1 导入模块"></a>4.1 导入模块</h2><h3 id="导入语法"><a href="#导入语法" class="headerlink" title="导入语法"></a>导入语法</h3><ol><li><p>导入整个模块(.py文件)</p><p>格式1：<code>import module_name</code>            </p><p>格式2：<code>import package_name.module_name</code>            当模块在某个包内</p></li><li><p>导入某个模块的类（变量与函数类似）</p><p>格式1：<code>import module_name.class_name</code></p><p>格式2：<code>from package_name.module_name import class_name</code>        </p><p>格式3：<code>import package_name.module_name.class_name</code>        当类所在模块模块在某个包内</p><p>格式4：<code>from package_name.module_nameimport class_name</code>        当类所在模块模块在某个包内</p></li></ol><h3 id="if-name-39-main-39-的使用"><a href="#if-name-39-main-39-的使用" class="headerlink" title="if __name__==&#39;__main__&#39;:的使用"></a><code>if __name__==&#39;__main__&#39;:</code>的使用</h3><ul><li>if <strong>name</strong> == ‘<strong>main</strong>‘ 我们简单的理解就是： 如果模块是被直接运行的，则代码块被运行，如果模块是被导入的，则代码块不被运行。</li><li>作用<ul><li>作为模块测试—–测试当前.py文件的功能</li></ul></li><li><code>if __name__==__main__:</code>如果模块是被导入的，则代码块不被运行的原因<ul><li>在当前模块直接执行<code>print(__name__)</code>的结果永远是：<code>__main__</code></li><li>在当前模块被别的模块import导入执行时<code>__name__</code>结果是：[包名.]模块名</li><li>if判断<code>__name__</code>不等于<code>__main__</code>，故不执行其下的代码，导入时执行了判断，只是不符合条件</li></ul></li></ul><h3 id="查看导入的模块的路径"><a href="#查看导入的模块的路径" class="headerlink" title="查看导入的模块的路径"></a>查看导入的模块的路径</h3><p>语句：<code>module_name.__file__</code></p><p>如：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> randomrandom<span class="token punctuation">.</span>__file__</code></pre><p>需要说明的是，并不是所有模块都是使用 Python 语言编写的，有些与底层交互的模块可能是用 C 语言编写的，而且是 C 程序编译之后的效果，因此这种模块可能没有 file 属性，如sys模块。</p><h2 id="4-2-导入包"><a href="#4-2-导入包" class="headerlink" title="4.2 导入包"></a>4.2 导入包</h2><h3 id="格式1：import-package-name-导入包下的-init-py文件"><a href="#格式1：import-package-name-导入包下的-init-py文件" class="headerlink" title="格式1：import package_name             导入包下的__init__.py文件"></a>格式1：import package_name             导入包下的<code>__init__.py</code>文件</h3><p>（1）如果包下的<code>__init__.py</code>文件没有写任何语句，是一个空文件，这种格式无法调用任何包内的模块</p><p>例子：</p><p>文件</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_package_1包下的__init__.py文件</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_package_1包下的test01.py文件</span><span class="token keyword">def</span> <span class="token function">my_test_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'这里是my_package_1包下的test01.py文件'</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_import_package_1.py文件</span><span class="token keyword">import</span> my_package_1my_package_1<span class="token punctuation">.</span>test01<span class="token punctuation">.</span>my_test_1<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>输出：</p><pre class=" language-python"><code class="language-python">AttributeError<span class="token punctuation">:</span> module <span class="token string">'my_package_1'</span> has no attribute <span class="token string">'my_test_1'</span></code></pre><p>原因：</p><p><code>__init__.py</code>是一个空文件，使用<code>import package_name</code>该种导入方式无法使用包中的模块，保证<code>__init__.py</code>导入模块写了import 导入语句（建议和<code>__all__</code>连用，但是单独只有<code>__all__</code>无法找到模块）</p><p>（2）如果包下的<code>__init__.py</code>文件写了导入语句</p><p>例子：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_package_2包下的__init__.py文件</span><span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> test02<span class="token comment" spellcheck="true">#__all__=['test02']</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_package_2包下的test02.py文件</span><span class="token keyword">def</span> <span class="token function">my_test_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'这里是my_package_2包下的test02.py文件'</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_import_package_2.py文件</span><span class="token keyword">import</span> my_package_2my_package_1<span class="token punctuation">.</span>test02<span class="token punctuation">.</span>my_test_2<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>输出：</p><pre class=" language-python"><code class="language-python">这里是my_package_2包下的test01<span class="token punctuation">.</span>py文件</code></pre><p>原因：</p><p><code>__init__.py</code>是一个空文件，使用<code>import package_name</code>该种导入方式无法使用包中的模块，保证<code>__init__.py</code>导入模块写了导入语句或给<code>__all__</code>赋值</p><p>建议：<code>__init__.py</code>导入模块写import 导入语句（建议和<code>__all__</code>连用，但是单独只写<code>__all__</code>不写导入语句无法找到模块）</p><h3 id="格式2：from-package-name-import-module-name——-推荐"><a href="#格式2：from-package-name-import-module-name——-推荐" class="headerlink" title="格式2：from package_name import module_name——-推荐"></a>格式2：from package_name import module_name——-推荐</h3><p>（1）对包下的<code>__init__.py</code>文件没有要求，这种格式直接调用任何包内的某个模块</p><p>例子：</p><p>文件</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_package_3包下的__init__.py文件</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_package_3包下的test03.py文件</span><span class="token keyword">def</span> <span class="token function">my_test_3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'这里是my_package_3包下的test03.py文件'</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># my_import_package_3.py文件</span><span class="token keyword">from</span> my_package_3 <span class="token keyword">import</span> test03    <span class="token comment" spellcheck="true">#**********************************************</span>test03<span class="token punctuation">.</span>my_test_3<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>输出：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'这里是my_package_3包下的test03.py文件'</span><span class="token punctuation">)</span></code></pre><h3 id="格式3：from-package-name-import"><a href="#格式3：from-package-name-import" class="headerlink" title="格式3：from package_name import *"></a>格式3：from package_name import *</h3><p><code>from package_name import *</code>调用时不需要写包名，引入过多有命名冲突问题</p><p><code>from package_name import *</code>导入的是</p><ul><li><p>所有在<code>__init__.py</code>文件中<code>__all__</code>列表变量的内容</p></li><li><p><code>__init__.py</code>文件中import导入的模块</p></li><li><p><code>__all__</code>列表与import导入同时使用，以<code>__all__</code>列表为准</p></li><li><p>同格式1：<code>import package_name</code>，需要保证<code>__init__.py</code>有被调用的导入模块</p></li></ul><h1 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h1><p>什么是内建模块？module ‘sys’ &lt; built-in &gt; is a built-in module，与普通的模块区别？为什么嵌入式版本python模块搜寻路径没有当前路径？</p><p><code>__init__.py</code>可以写哪些内容？作用是什么？有什么书写建议或规范？</p><p>相对导入与绝对导入问题</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>1.<a href="https://blog.csdn.net/v_xchen_v/article/details/80393967" target="_blank" rel="noopener"><strong>【Python】 sys.path(环境变量)与<strong>init</strong>.py</strong></a>（<a href="https://blog.csdn.net/v_xchen_v/article/details/80393967）" target="_blank" rel="noopener">https://blog.csdn.net/v_xchen_v/article/details/80393967）</a></p><p>2.<a href="https://www.cnblogs.com/ljhdo/p/10674242.html" target="_blank" rel="noopener">Python 学习 第13篇：模块搜索路径和包导入</a>（<a href="https://www.cnblogs.com/ljhdo/p/10674242.html）" target="_blank" rel="noopener">https://www.cnblogs.com/ljhdo/p/10674242.html）</a></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
          <category> sys模块 </category>
          
          <category> __init__.py </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python环境安装</title>
      <link href="/2019/07/22/python-huan-jing-an-zhuang/"/>
      <url>/2019/07/22/python-huan-jing-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://www.python.org/downloads" target="_blank" rel="noopener">Python官网安装地址</a> : <a href="https://www.python.org/downloads" target="_blank" rel="noopener">https://www.python.org/downloads</a></p><p>以安装<a href="https://www.python.org/downloads/release/python-374/" target="_blank" rel="noopener">Python 3.7.4</a>为例</p><h2 id="安装包选项"><a href="#安装包选项" class="headerlink" title="安装包选项"></a>安装包选项</h2><h3 id="安装包选项如下："><a href="#安装包选项如下：" class="headerlink" title="安装包选项如下："></a>安装包选项如下：</h3><table><thead><tr><th>Version</th><th>Operating System</th><th>Description</th><th>File Size</th><th>GPG</th></tr></thead><tbody><tr><td><a href="https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz" target="_blank" rel="noopener">Gzipped source tarball</a></td><td>Source release</td><td></td><td>23017663</td><td><a href="https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tar.xz" target="_blank" rel="noopener">XZ compressed source tarball</a></td><td>Source release</td><td></td><td>17131432</td><td><a href="https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tar.xz.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-macosx10.6.pkg" target="_blank" rel="noopener">macOS 64-bit/32-bit installer</a></td><td>Mac OS X</td><td>for Mac OS X 10.6 and later</td><td>34898416</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-macosx10.6.pkg.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-macosx10.9.pkg" target="_blank" rel="noopener">macOS 64-bit installer</a></td><td>Mac OS X</td><td>for OS X 10.9 and later</td><td>28082845</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-macosx10.9.pkg.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python374.chm" target="_blank" rel="noopener">Windows help file</a></td><td>Windows</td><td></td><td>8131761</td><td><a href="https://www.python.org/ftp/python/3.7.4/python374.chm.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-embed-amd64.zip" target="_blank" rel="noopener">Windows x86-64 embeddable zip file</a></td><td>Windows</td><td>for AMD64/EM64T/x64</td><td>7504391</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-embed-amd64.zip.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-amd64.exe" target="_blank" rel="noopener">Windows x86-64 executable installer</a></td><td>Windows</td><td>for AMD64/EM64T/x64</td><td>26680368</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-amd64.exe.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-amd64-webinstall.exe" target="_blank" rel="noopener">Windows x86-64 web-based installer</a></td><td>Windows</td><td>for AMD64/EM64T/x64</td><td>1362904</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-amd64-webinstall.exe.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-embed-win32.zip" target="_blank" rel="noopener">Windows x86 embeddable zip file</a></td><td>Windows</td><td></td><td>6741626</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-embed-win32.zip.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4.exe" target="_blank" rel="noopener">Windows x86 executable installer</a></td><td>Windows</td><td></td><td>25663848</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4.exe.asc" target="_blank" rel="noopener">SIG</a></td></tr><tr><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-webinstall.exe" target="_blank" rel="noopener">Windows x86 web-based installer</a></td><td>Windows</td><td></td><td>1324608</td><td><a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-webinstall.exe.asc" target="_blank" rel="noopener">SIG</a></td></tr></tbody></table><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>web-based installer 是需要通过联网完成安装的</p><p>executable installer 是可执行文件(*.exe)方式安装</p><p>embeddable zip file 嵌入式版本，可以集成到其它应用中。</p><p>embeddable zip file 嵌入式版本<a href="https://docs.python.org/3.5/using/windows.html#embedded-distribution" target="_blank" rel="noopener">官网描述</a>如下：</p><blockquote><p>The embedded distribution is a ZIP file containing a minimal Python environment. <strong>It is intended for acting as part of another application, rather than being directly accessed by end-users.</strong></p><p>When extracted, the embedded distribution is (almost) fully isolated from the user’s system, including environment variables, system registry settings, and installed packages. The standard library is included as pre-compiled and optimized .pyc files in a ZIP, and python3.dll, python35.dll, python.exe and pythonw.exe are all provided. <strong>Tcl/tk (including all dependants, such as Idle), pip and the Python documentation are not included.</strong></p><p><strong>Note：</strong>The embedded distribution <strong>does not include the <a href="https://www.microsoft.com/en-us/download/details.aspx?id=48145" target="_blank" rel="noopener">Microsoft C Runtime</a></strong> and it is the responsibility of the application installer to provide this. The runtime may have already been installed on a user’s system previously or automatically via Windows Update, and can be detected by finding ucrtbase.dll in the system directory.</p><p>Third-party packages should be installed by the application installer alongside the embedded distribution. Using pip to manage dependencies as for a regular Python installation is not supported with this distribution, though with some care it may be possible to include and use pip for automatic updates. In general, third-party packages should be treated as part of the application (“vendoring”) so that the developer can ensure compatibility with newer versions before providing updates to users.</p><p>The two recommended use cases for this distribution are described below.</p></blockquote><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>选择安装<a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-amd64.exe" target="_blank" rel="noopener">Windows x86-64 executable installer</a>版本</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1.双击python-3.7.4-amd64.exe</p><p>首页界面</p><p><img src="/2019/07/22/python-huan-jing-an-zhuang/%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A21.png" alt="安装首页"></p><p>点击自定义安装</p><p><img src="/2019/07/22/python-huan-jing-an-zhuang/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A22.png" alt></p><p>说明：</p><p><a href="https://www.cnblogs.com/Neeo/p/8393805.html" target="_blank" rel="noopener">Python launcher根据文件头自动帮我们调用了指定版本的解释器来执行该文件。</a></p><p>勾选相应需求，点击下一步</p><p><img src="/2019/07/22/python-huan-jing-an-zhuang/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A23.png" alt></p><p>点击安装</p><blockquote><p>注意：如果是第一次安装，安装完成后会有个提示 Removing the MAX_PATH Limitation。我们选择Enable即可。主要原因是 Windows historically has limited path lengths to 260 characters. This meant that paths longer than this would not resolve and errors would result.也可以手动修改注册表HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem@LongPathsEnabled to 1.</p></blockquote><h3 id="检测安装"><a href="#检测安装" class="headerlink" title="检测安装"></a>检测安装</h3><p><code>Win+r</code>  ==&gt; <code>cmd</code> 调出命令行窗口</p><p>输入<code>python --version</code> </p><p>输入<code>pip --version</code></p><p><img src="/2019/07/22/python-huan-jing-an-zhuang/%E6%A3%80%E6%B5%8B%E5%AE%89%E8%A3%85.png" alt></p><h2 id="安装目录介绍"><a href="#安装目录介绍" class="headerlink" title="安装目录介绍"></a>安装目录介绍</h2><p><img src="/2019/07/22/python-huan-jing-an-zhuang/%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95.png" alt></p><p>下面简单介绍一下目录、文件的具体用途：</p><pre><code>DLLs： Python 自己使用的动态库Doc： 自带的 Python 使用说明文档include： 包含共享目录Lib： 库文件，放自定义模块和包libs： 编译生成的Python 自己使用的静态库Scripts： 各种包/模块对应的可执行程序。安装时如果选择了pip。那么pip的可执行程序就在此！tcl： 桌面编程包</code></pre><hr><p>参考文献<br>原文：<a href="https://blog.csdn.net/ZCShouCSDN/article/details/84990674" target="_blank" rel="noopener">https://blog.csdn.net/ZCShouCSDN/article/details/84990674</a> </p><h2 id="嵌入式python安装"><a href="#嵌入式python安装" class="headerlink" title="嵌入式python安装"></a>嵌入式python安装</h2><p>1.选择安装<a href="https://www.python.org/ftp/python/3.7.4/python-3.7.4-embed-amd64.zip" target="_blank" rel="noopener">Windows x86-64 embeddable zip file</a>版本</p><p>2.安装pip</p><p>下载<a href="https://bootstrap.pypa.io/get-pip.py" target="_blank" rel="noopener">get-pip.py</a>到解压后的目录中:</p><p><img src="http://wwj-fig-bed.just4fun.site/pip_6580f932.png" alt="img"></p><p>3.之后运行:<code>.\python get-pip.py</code></p><p>修改<code>python37._pth</code>:</p><pre><code>python37.zip.# Uncomment to run site.main() automaticallyimport site   # 去掉注释</code></pre><p>4.安装第三方库</p><p>命令行切换到当前pythonan安装目录</p><p>执行命令：</p><pre><code>.\python -m pip install 库名</code></pre><p>5.python程序执行</p><pre><code>.\python C:\Users\DELL\Downloads\Compressed\python-3.7.4-embed-amd64\coding\my.py</code></pre><h2 id="Python常用命令行"><a href="#Python常用命令行" class="headerlink" title="Python常用命令行"></a>Python常用命令行</h2><p>1.运行python 程序</p><pre><code>.\python python文件名带后缀名</code></pre><p>例子：<code>.\python my.py</code></p><p>2.安装第三方库或者包</p><pre><code>.\python -m pip install  库名</code></pre><p>例子：<code>.\python -m pip install qrcode</code></p><h2 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h2><p>安装目录的各个数据分别是哪里来的？</p><p>在<code>Lib/site-packages</code>设置环境变量的作用</p><p>pip安装的模块安装在哪个目录，如何自定义安装目录？</p><p>Scripts目录里的可执行文件是如何产生的？</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 环境安装 </tag>
            
            <tag> 绿色开发软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/17/hello-world/"/>
      <url>/2019/07/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="Quick-Start-1"><a href="#Quick-Start-1" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 第一个页面 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
